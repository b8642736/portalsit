'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:4.0.30319.1
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="QCdb01")>  _
Partial Public Class WebAPPAuthorityDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "擴充性方法定義"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertWebDepartmentAuthority(instance As WebDepartmentAuthority)
    End Sub
  Partial Private Sub UpdateWebDepartmentAuthority(instance As WebDepartmentAuthority)
    End Sub
  Partial Private Sub DeleteWebDepartmentAuthority(instance As WebDepartmentAuthority)
    End Sub
  Partial Private Sub InsertWebUserAuthority(instance As WebUserAuthority)
    End Sub
  Partial Private Sub UpdateWebUserAuthority(instance As WebUserAuthority)
    End Sub
  Partial Private Sub DeleteWebUserAuthority(instance As WebUserAuthority)
    End Sub
  Partial Private Sub InsertWebSystem(instance As WebSystem)
    End Sub
  Partial Private Sub UpdateWebSystem(instance As WebSystem)
    End Sub
  Partial Private Sub DeleteWebSystem(instance As WebSystem)
    End Sub
  Partial Private Sub InsertWebSystemFunction(instance As WebSystemFunction)
    End Sub
  Partial Private Sub UpdateWebSystemFunction(instance As WebSystemFunction)
    End Sub
  Partial Private Sub DeleteWebSystemFunction(instance As WebSystemFunction)
    End Sub
  Partial Private Sub InsertWebClientPCAuthority(instance As WebClientPCAuthority)
    End Sub
  Partial Private Sub UpdateWebClientPCAuthority(instance As WebClientPCAuthority)
    End Sub
  Partial Private Sub DeleteWebClientPCAuthority(instance As WebClientPCAuthority)
    End Sub
  Partial Private Sub InsertSMPClientPCMonitor(instance As SMPClientPCMonitor)
    End Sub
  Partial Private Sub UpdateSMPClientPCMonitor(instance As SMPClientPCMonitor)
    End Sub
  Partial Private Sub DeleteSMPClientPCMonitor(instance As SMPClientPCMonitor)
    End Sub
  Partial Private Sub InsertWebGroupAccount(instance As WebGroupAccount)
    End Sub
  Partial Private Sub UpdateWebGroupAccount(instance As WebGroupAccount)
    End Sub
  Partial Private Sub DeleteWebGroupAccount(instance As WebGroupAccount)
    End Sub
  Partial Private Sub InsertWebClientPCAccountTOWebGroupAccount(instance As WebClientPCAccountTOWebGroupAccount)
    End Sub
  Partial Private Sub UpdateWebClientPCAccountTOWebGroupAccount(instance As WebClientPCAccountTOWebGroupAccount)
    End Sub
  Partial Private Sub DeleteWebClientPCAccountTOWebGroupAccount(instance As WebClientPCAccountTOWebGroupAccount)
    End Sub
  Partial Private Sub InsertWebLoginAccountToWebGroupAccount(instance As WebLoginAccountToWebGroupAccount)
    End Sub
  Partial Private Sub UpdateWebLoginAccountToWebGroupAccount(instance As WebLoginAccountToWebGroupAccount)
    End Sub
  Partial Private Sub DeleteWebLoginAccountToWebGroupAccount(instance As WebLoginAccountToWebGroupAccount)
    End Sub
  Partial Private Sub InsertWebGroupAuthority(instance As WebGroupAuthority)
    End Sub
  Partial Private Sub UpdateWebGroupAuthority(instance As WebGroupAuthority)
    End Sub
  Partial Private Sub DeleteWebGroupAuthority(instance As WebGroupAuthority)
    End Sub
  Partial Private Sub InsertWebClientPCAccount(instance As WebClientPCAccount)
    End Sub
  Partial Private Sub UpdateWebClientPCAccount(instance As WebClientPCAccount)
    End Sub
  Partial Private Sub DeleteWebClientPCAccount(instance As WebClientPCAccount)
    End Sub
  Partial Private Sub InsertWebLoginAccount(instance As WebLoginAccount)
    End Sub
  Partial Private Sub UpdateWebLoginAccount(instance As WebLoginAccount)
    End Sub
  Partial Private Sub DeleteWebLoginAccount(instance As WebLoginAccount)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CompanyLINQDB.My.MySettings.Default.Server1_QCdb01, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property WebDepartmentAuthority() As System.Data.Linq.Table(Of WebDepartmentAuthority)
		Get
			Return Me.GetTable(Of WebDepartmentAuthority)
		End Get
	End Property
	
	Public ReadOnly Property WebUserAuthority() As System.Data.Linq.Table(Of WebUserAuthority)
		Get
			Return Me.GetTable(Of WebUserAuthority)
		End Get
	End Property
	
	Public ReadOnly Property WebSystem() As System.Data.Linq.Table(Of WebSystem)
		Get
			Return Me.GetTable(Of WebSystem)
		End Get
	End Property
	
	Public ReadOnly Property WebSystemFunction() As System.Data.Linq.Table(Of WebSystemFunction)
		Get
			Return Me.GetTable(Of WebSystemFunction)
		End Get
	End Property
	
	Public ReadOnly Property WebClientPCAuthority() As System.Data.Linq.Table(Of WebClientPCAuthority)
		Get
			Return Me.GetTable(Of WebClientPCAuthority)
		End Get
	End Property
	
	Public ReadOnly Property SMPClientPCMonitor() As System.Data.Linq.Table(Of SMPClientPCMonitor)
		Get
			Return Me.GetTable(Of SMPClientPCMonitor)
		End Get
	End Property
	
	Public ReadOnly Property WebGroupAccount() As System.Data.Linq.Table(Of WebGroupAccount)
		Get
			Return Me.GetTable(Of WebGroupAccount)
		End Get
	End Property
	
	Public ReadOnly Property WebClientPCAccountTOWebGroupAccount() As System.Data.Linq.Table(Of WebClientPCAccountTOWebGroupAccount)
		Get
			Return Me.GetTable(Of WebClientPCAccountTOWebGroupAccount)
		End Get
	End Property
	
	Public ReadOnly Property WebLoginAccountToWebGroupAccount() As System.Data.Linq.Table(Of WebLoginAccountToWebGroupAccount)
		Get
			Return Me.GetTable(Of WebLoginAccountToWebGroupAccount)
		End Get
	End Property
	
	Public ReadOnly Property WebGroupAuthority() As System.Data.Linq.Table(Of WebGroupAuthority)
		Get
			Return Me.GetTable(Of WebGroupAuthority)
		End Get
	End Property
	
	Public ReadOnly Property WebClientPCAccount() As System.Data.Linq.Table(Of WebClientPCAccount)
		Get
			Return Me.GetTable(Of WebClientPCAccount)
		End Get
	End Property
	
	Public ReadOnly Property WebLoginAccount() As System.Data.Linq.Table(Of WebLoginAccount)
		Get
			Return Me.GetTable(Of WebLoginAccount)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebDepartmentAuthority")>  _
Partial Public Class WebDepartmentAuthority
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _DepartmentCode As String
	
	Private _DepartmentName As String
	
	Private _IsDepartmentAuthorityManager As System.Nullable(Of Boolean)
	
	Private _Description As String
	
	Private _FK_SystemCode As String
	
	Private _FK_SystemFunctionCode As String
	
	Private _WebSystemFunction As EntityRef(Of WebSystemFunction)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnDepartmentCodeChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentCodeChanged()
    End Sub
    Partial Private Sub OnDepartmentNameChanging(value As String)
    End Sub
    Partial Private Sub OnDepartmentNameChanged()
    End Sub
    Partial Private Sub OnIsDepartmentAuthorityManagerChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsDepartmentAuthorityManagerChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    Partial Private Sub OnFK_SystemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SystemCodeChanged()
    End Sub
    Partial Private Sub OnFK_SystemFunctionCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SystemFunctionCodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebSystemFunction = CType(Nothing, EntityRef(Of WebSystemFunction))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepartmentCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property DepartmentCode() As String
		Get
			Return Me._DepartmentCode
		End Get
		Set
			If (String.Equals(Me._DepartmentCode, value) = false) Then
				Me.OnDepartmentCodeChanging(value)
				Me.SendPropertyChanging
				Me._DepartmentCode = value
				Me.SendPropertyChanged("DepartmentCode")
				Me.OnDepartmentCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DepartmentName", DbType:="Char(20)")>  _
	Public Property DepartmentName() As String
		Get
			Return Me._DepartmentName
		End Get
		Set
			If (String.Equals(Me._DepartmentName, value) = false) Then
				Me.OnDepartmentNameChanging(value)
				Me.SendPropertyChanging
				Me._DepartmentName = value
				Me.SendPropertyChanged("DepartmentName")
				Me.OnDepartmentNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDepartmentAuthorityManager", DbType:="Bit")>  _
	Public Property IsDepartmentAuthorityManager() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDepartmentAuthorityManager
		End Get
		Set
			If (Me._IsDepartmentAuthorityManager.Equals(value) = false) Then
				Me.OnIsDepartmentAuthorityManagerChanging(value)
				Me.SendPropertyChanging
				Me._IsDepartmentAuthorityManager = value
				Me.SendPropertyChanged("IsDepartmentAuthorityManager")
				Me.OnIsDepartmentAuthorityManagerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="Char(200)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SystemCode", DbType:="Char(10)")>  _
	Public Property FK_SystemCode() As String
		Get
			Return Me._FK_SystemCode
		End Get
		Set
			If (String.Equals(Me._FK_SystemCode, value) = false) Then
				If Me._WebSystemFunction.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_SystemCodeChanging(value)
				Me.SendPropertyChanging
				Me._FK_SystemCode = value
				Me.SendPropertyChanged("FK_SystemCode")
				Me.OnFK_SystemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SystemFunctionCode", DbType:="Char(10)")>  _
	Public Property FK_SystemFunctionCode() As String
		Get
			Return Me._FK_SystemFunctionCode
		End Get
		Set
			If (String.Equals(Me._FK_SystemFunctionCode, value) = false) Then
				If Me._WebSystemFunction.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_SystemFunctionCodeChanging(value)
				Me.SendPropertyChanging
				Me._FK_SystemFunctionCode = value
				Me.SendPropertyChanged("FK_SystemFunctionCode")
				Me.OnFK_SystemFunctionCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebSystemFunction_WebDepartmentAuthority", Storage:="_WebSystemFunction", ThisKey:="FK_SystemFunctionCode,FK_SystemCode", OtherKey:="FunctionCode,SystemCode", IsForeignKey:=true)>  _
	Public Property WebSystemFunction() As WebSystemFunction
		Get
			Return Me._WebSystemFunction.Entity
		End Get
		Set
			Dim previousValue As WebSystemFunction = Me._WebSystemFunction.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebSystemFunction.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebSystemFunction.Entity = Nothing
					previousValue.WebDepartmentAuthority.Remove(Me)
				End If
				Me._WebSystemFunction.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebDepartmentAuthority.Add(Me)
					Me._FK_SystemFunctionCode = value.FunctionCode
					Me._FK_SystemCode = value.SystemCode
				Else
					Me._FK_SystemFunctionCode = CType(Nothing, String)
					Me._FK_SystemCode = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebSystemFunction")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebUserAuthority")>  _
Partial Public Class WebUserAuthority
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FKWebLoginAccount_WindowLoginName As String
	
	Private _FK_SystemCode As String
	
	Private _FK_SystemFunctionCode As String
	
	Private _Description As String
	
	Private _WebSystemFunction As EntityRef(Of WebSystemFunction)
	
	Private _WebLoginAccount As EntityRef(Of WebLoginAccount)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFKWebLoginAccount_WindowLoginNameChanging(value As String)
    End Sub
    Partial Private Sub OnFKWebLoginAccount_WindowLoginNameChanged()
    End Sub
    Partial Private Sub OnFK_SystemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SystemCodeChanged()
    End Sub
    Partial Private Sub OnFK_SystemFunctionCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SystemFunctionCodeChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebSystemFunction = CType(Nothing, EntityRef(Of WebSystemFunction))
		Me._WebLoginAccount = CType(Nothing, EntityRef(Of WebLoginAccount))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKWebLoginAccount_WindowLoginName", DbType:="Char(13) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FKWebLoginAccount_WindowLoginName() As String
		Get
			Return Me._FKWebLoginAccount_WindowLoginName
		End Get
		Set
			If (String.Equals(Me._FKWebLoginAccount_WindowLoginName, value) = false) Then
				If Me._WebLoginAccount.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFKWebLoginAccount_WindowLoginNameChanging(value)
				Me.SendPropertyChanging
				Me._FKWebLoginAccount_WindowLoginName = value
				Me.SendPropertyChanged("FKWebLoginAccount_WindowLoginName")
				Me.OnFKWebLoginAccount_WindowLoginNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SystemCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_SystemCode() As String
		Get
			Return Me._FK_SystemCode
		End Get
		Set
			If (String.Equals(Me._FK_SystemCode, value) = false) Then
				If Me._WebSystemFunction.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_SystemCodeChanging(value)
				Me.SendPropertyChanging
				Me._FK_SystemCode = value
				Me.SendPropertyChanged("FK_SystemCode")
				Me.OnFK_SystemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SystemFunctionCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_SystemFunctionCode() As String
		Get
			Return Me._FK_SystemFunctionCode
		End Get
		Set
			If (String.Equals(Me._FK_SystemFunctionCode, value) = false) Then
				If Me._WebSystemFunction.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_SystemFunctionCodeChanging(value)
				Me.SendPropertyChanging
				Me._FK_SystemFunctionCode = value
				Me.SendPropertyChanged("FK_SystemFunctionCode")
				Me.OnFK_SystemFunctionCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="Char(200)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebSystemFunction_WebUserAuthority", Storage:="_WebSystemFunction", ThisKey:="FK_SystemFunctionCode,FK_SystemCode", OtherKey:="FunctionCode,SystemCode", IsForeignKey:=true)>  _
	Public Property WebSystemFunction() As WebSystemFunction
		Get
			Return Me._WebSystemFunction.Entity
		End Get
		Set
			Dim previousValue As WebSystemFunction = Me._WebSystemFunction.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebSystemFunction.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebSystemFunction.Entity = Nothing
					previousValue.WebUserAuthority.Remove(Me)
				End If
				Me._WebSystemFunction.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebUserAuthority.Add(Me)
					Me._FK_SystemFunctionCode = value.FunctionCode
					Me._FK_SystemCode = value.SystemCode
				Else
					Me._FK_SystemFunctionCode = CType(Nothing, String)
					Me._FK_SystemCode = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebSystemFunction")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebLoginAccount_WebUserAuthority", Storage:="_WebLoginAccount", ThisKey:="FKWebLoginAccount_WindowLoginName", OtherKey:="WindowLoginName", IsForeignKey:=true)>  _
	Public Property WebLoginAccount() As WebLoginAccount
		Get
			Return Me._WebLoginAccount.Entity
		End Get
		Set
			Dim previousValue As WebLoginAccount = Me._WebLoginAccount.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebLoginAccount.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebLoginAccount.Entity = Nothing
					previousValue.WebUserAuthority.Remove(Me)
				End If
				Me._WebLoginAccount.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebUserAuthority.Add(Me)
					Me._FKWebLoginAccount_WindowLoginName = value.WindowLoginName
				Else
					Me._FKWebLoginAccount_WindowLoginName = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebLoginAccount")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebSystem")>  _
Partial Public Class WebSystem
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _SystemCode As String
	
	Private _SystemName As String
	
	Private _Description As String
	
	Private _WebSystemFunction As EntitySet(Of WebSystemFunction)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnSystemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSystemCodeChanged()
    End Sub
    Partial Private Sub OnSystemNameChanging(value As String)
    End Sub
    Partial Private Sub OnSystemNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebSystemFunction = New EntitySet(Of WebSystemFunction)(AddressOf Me.attach_WebSystemFunction, AddressOf Me.detach_WebSystemFunction)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SystemCode() As String
		Get
			Return Me._SystemCode
		End Get
		Set
			If (String.Equals(Me._SystemCode, value) = false) Then
				Me.OnSystemCodeChanging(value)
				Me.SendPropertyChanging
				Me._SystemCode = value
				Me.SendPropertyChanged("SystemCode")
				Me.OnSystemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemName", DbType:="Char(20)")>  _
	Public Property SystemName() As String
		Get
			Return Me._SystemName
		End Get
		Set
			If (String.Equals(Me._SystemName, value) = false) Then
				Me.OnSystemNameChanging(value)
				Me.SendPropertyChanging
				Me._SystemName = value
				Me.SendPropertyChanged("SystemName")
				Me.OnSystemNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="Char(200)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebSystem_WebSystemFunction", Storage:="_WebSystemFunction", ThisKey:="SystemCode", OtherKey:="SystemCode")>  _
	Public Property WebSystemFunction() As EntitySet(Of WebSystemFunction)
		Get
			Return Me._WebSystemFunction
		End Get
		Set
			Me._WebSystemFunction.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_WebSystemFunction(ByVal entity As WebSystemFunction)
		Me.SendPropertyChanging
		entity.WebSystem = Me
	End Sub
	
	Private Sub detach_WebSystemFunction(ByVal entity As WebSystemFunction)
		Me.SendPropertyChanging
		entity.WebSystem = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebSystemFunction")>  _
Partial Public Class WebSystemFunction
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FunctionCode As String
	
	Private _SystemCode As String
	
	Private _FunctionName As String
	
	Private _Description As String
	
	Private _WebDepartmentAuthority As EntitySet(Of WebDepartmentAuthority)
	
	Private _WebUserAuthority As EntitySet(Of WebUserAuthority)
	
	Private _WebClientPCAuthority As EntitySet(Of WebClientPCAuthority)
	
	Private _WebGroupAuthority As EntitySet(Of WebGroupAuthority)
	
	Private _WebSystem As EntityRef(Of WebSystem)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFunctionCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFunctionCodeChanged()
    End Sub
    Partial Private Sub OnSystemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnSystemCodeChanged()
    End Sub
    Partial Private Sub OnFunctionNameChanging(value As String)
    End Sub
    Partial Private Sub OnFunctionNameChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebDepartmentAuthority = New EntitySet(Of WebDepartmentAuthority)(AddressOf Me.attach_WebDepartmentAuthority, AddressOf Me.detach_WebDepartmentAuthority)
		Me._WebUserAuthority = New EntitySet(Of WebUserAuthority)(AddressOf Me.attach_WebUserAuthority, AddressOf Me.detach_WebUserAuthority)
		Me._WebClientPCAuthority = New EntitySet(Of WebClientPCAuthority)(AddressOf Me.attach_WebClientPCAuthority, AddressOf Me.detach_WebClientPCAuthority)
		Me._WebGroupAuthority = New EntitySet(Of WebGroupAuthority)(AddressOf Me.attach_WebGroupAuthority, AddressOf Me.detach_WebGroupAuthority)
		Me._WebSystem = CType(Nothing, EntityRef(Of WebSystem))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FunctionCode() As String
		Get
			Return Me._FunctionCode
		End Get
		Set
			If (String.Equals(Me._FunctionCode, value) = false) Then
				Me.OnFunctionCodeChanging(value)
				Me.SendPropertyChanging
				Me._FunctionCode = value
				Me.SendPropertyChanged("FunctionCode")
				Me.OnFunctionCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SystemCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property SystemCode() As String
		Get
			Return Me._SystemCode
		End Get
		Set
			If (String.Equals(Me._SystemCode, value) = false) Then
				If Me._WebSystem.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnSystemCodeChanging(value)
				Me.SendPropertyChanging
				Me._SystemCode = value
				Me.SendPropertyChanged("SystemCode")
				Me.OnSystemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FunctionName", DbType:="Char(20)")>  _
	Public Property FunctionName() As String
		Get
			Return Me._FunctionName
		End Get
		Set
			If (String.Equals(Me._FunctionName, value) = false) Then
				Me.OnFunctionNameChanging(value)
				Me.SendPropertyChanging
				Me._FunctionName = value
				Me.SendPropertyChanged("FunctionName")
				Me.OnFunctionNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="Char(100)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebSystemFunction_WebDepartmentAuthority", Storage:="_WebDepartmentAuthority", ThisKey:="FunctionCode,SystemCode", OtherKey:="FK_SystemFunctionCode,FK_SystemCode")>  _
	Public Property WebDepartmentAuthority() As EntitySet(Of WebDepartmentAuthority)
		Get
			Return Me._WebDepartmentAuthority
		End Get
		Set
			Me._WebDepartmentAuthority.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebSystemFunction_WebUserAuthority", Storage:="_WebUserAuthority", ThisKey:="FunctionCode,SystemCode", OtherKey:="FK_SystemFunctionCode,FK_SystemCode")>  _
	Public Property WebUserAuthority() As EntitySet(Of WebUserAuthority)
		Get
			Return Me._WebUserAuthority
		End Get
		Set
			Me._WebUserAuthority.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebSystemFunction_WebClientPCAuthority", Storage:="_WebClientPCAuthority", ThisKey:="FunctionCode,SystemCode", OtherKey:="FK_SystemFunctionCode,FK_SystemCode")>  _
	Public Property WebClientPCAuthority() As EntitySet(Of WebClientPCAuthority)
		Get
			Return Me._WebClientPCAuthority
		End Get
		Set
			Me._WebClientPCAuthority.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebSystemFunction_WebGroupAuthority", Storage:="_WebGroupAuthority", ThisKey:="FunctionCode,SystemCode", OtherKey:="FK_SystemFunctionCode,FK_SystemCode")>  _
	Public Property WebGroupAuthority() As EntitySet(Of WebGroupAuthority)
		Get
			Return Me._WebGroupAuthority
		End Get
		Set
			Me._WebGroupAuthority.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebSystem_WebSystemFunction", Storage:="_WebSystem", ThisKey:="SystemCode", OtherKey:="SystemCode", IsForeignKey:=true, DeleteOnNull:=true, DeleteRule:="CASCADE")>  _
	Public Property WebSystem() As WebSystem
		Get
			Return Me._WebSystem.Entity
		End Get
		Set
			Dim previousValue As WebSystem = Me._WebSystem.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebSystem.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebSystem.Entity = Nothing
					previousValue.WebSystemFunction.Remove(Me)
				End If
				Me._WebSystem.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebSystemFunction.Add(Me)
					Me._SystemCode = value.SystemCode
				Else
					Me._SystemCode = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebSystem")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_WebDepartmentAuthority(ByVal entity As WebDepartmentAuthority)
		Me.SendPropertyChanging
		entity.WebSystemFunction = Me
	End Sub
	
	Private Sub detach_WebDepartmentAuthority(ByVal entity As WebDepartmentAuthority)
		Me.SendPropertyChanging
		entity.WebSystemFunction = Nothing
	End Sub
	
	Private Sub attach_WebUserAuthority(ByVal entity As WebUserAuthority)
		Me.SendPropertyChanging
		entity.WebSystemFunction = Me
	End Sub
	
	Private Sub detach_WebUserAuthority(ByVal entity As WebUserAuthority)
		Me.SendPropertyChanging
		entity.WebSystemFunction = Nothing
	End Sub
	
	Private Sub attach_WebClientPCAuthority(ByVal entity As WebClientPCAuthority)
		Me.SendPropertyChanging
		entity.WebSystemFunction = Me
	End Sub
	
	Private Sub detach_WebClientPCAuthority(ByVal entity As WebClientPCAuthority)
		Me.SendPropertyChanging
		entity.WebSystemFunction = Nothing
	End Sub
	
	Private Sub attach_WebGroupAuthority(ByVal entity As WebGroupAuthority)
		Me.SendPropertyChanging
		entity.WebSystemFunction = Me
	End Sub
	
	Private Sub detach_WebGroupAuthority(ByVal entity As WebGroupAuthority)
		Me.SendPropertyChanging
		entity.WebSystemFunction = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebClientPCAuthority")>  _
Partial Public Class WebClientPCAuthority
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FKWebClientPCAccount_ClientIP As String
	
	Private _FK_SystemCode As String
	
	Private _FK_SystemFunctionCode As String
	
	Private _Description As String
	
	Private _WebSystemFunction As EntityRef(Of WebSystemFunction)
	
	Private _WebClientPCAccount As EntityRef(Of WebClientPCAccount)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFKWebClientPCAccount_ClientIPChanging(value As String)
    End Sub
    Partial Private Sub OnFKWebClientPCAccount_ClientIPChanged()
    End Sub
    Partial Private Sub OnFK_SystemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SystemCodeChanged()
    End Sub
    Partial Private Sub OnFK_SystemFunctionCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SystemFunctionCodeChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebSystemFunction = CType(Nothing, EntityRef(Of WebSystemFunction))
		Me._WebClientPCAccount = CType(Nothing, EntityRef(Of WebClientPCAccount))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FKWebClientPCAccount_ClientIP", DbType:="Char(15) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FKWebClientPCAccount_ClientIP() As String
		Get
			Return Me._FKWebClientPCAccount_ClientIP
		End Get
		Set
			If (String.Equals(Me._FKWebClientPCAccount_ClientIP, value) = false) Then
				If Me._WebClientPCAccount.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFKWebClientPCAccount_ClientIPChanging(value)
				Me.SendPropertyChanging
				Me._FKWebClientPCAccount_ClientIP = value
				Me.SendPropertyChanged("FKWebClientPCAccount_ClientIP")
				Me.OnFKWebClientPCAccount_ClientIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SystemCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_SystemCode() As String
		Get
			Return Me._FK_SystemCode
		End Get
		Set
			If (String.Equals(Me._FK_SystemCode, value) = false) Then
				If Me._WebSystemFunction.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_SystemCodeChanging(value)
				Me.SendPropertyChanging
				Me._FK_SystemCode = value
				Me.SendPropertyChanged("FK_SystemCode")
				Me.OnFK_SystemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SystemFunctionCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_SystemFunctionCode() As String
		Get
			Return Me._FK_SystemFunctionCode
		End Get
		Set
			If (String.Equals(Me._FK_SystemFunctionCode, value) = false) Then
				If Me._WebSystemFunction.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_SystemFunctionCodeChanging(value)
				Me.SendPropertyChanging
				Me._FK_SystemFunctionCode = value
				Me.SendPropertyChanged("FK_SystemFunctionCode")
				Me.OnFK_SystemFunctionCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="Char(100)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebSystemFunction_WebClientPCAuthority", Storage:="_WebSystemFunction", ThisKey:="FK_SystemFunctionCode,FK_SystemCode", OtherKey:="FunctionCode,SystemCode", IsForeignKey:=true)>  _
	Public Property WebSystemFunction() As WebSystemFunction
		Get
			Return Me._WebSystemFunction.Entity
		End Get
		Set
			Dim previousValue As WebSystemFunction = Me._WebSystemFunction.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebSystemFunction.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebSystemFunction.Entity = Nothing
					previousValue.WebClientPCAuthority.Remove(Me)
				End If
				Me._WebSystemFunction.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebClientPCAuthority.Add(Me)
					Me._FK_SystemFunctionCode = value.FunctionCode
					Me._FK_SystemCode = value.SystemCode
				Else
					Me._FK_SystemFunctionCode = CType(Nothing, String)
					Me._FK_SystemCode = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebSystemFunction")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebClientPCAccount_WebClientPCAuthority", Storage:="_WebClientPCAccount", ThisKey:="FKWebClientPCAccount_ClientIP", OtherKey:="ClientIP", IsForeignKey:=true)>  _
	Public Property WebClientPCAccount() As WebClientPCAccount
		Get
			Return Me._WebClientPCAccount.Entity
		End Get
		Set
			Dim previousValue As WebClientPCAccount = Me._WebClientPCAccount.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebClientPCAccount.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebClientPCAccount.Entity = Nothing
					previousValue.WebClientPCAuthority.Remove(Me)
				End If
				Me._WebClientPCAccount.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebClientPCAuthority.Add(Me)
					Me._FKWebClientPCAccount_ClientIP = value.ClientIP
				Else
					Me._FKWebClientPCAccount_ClientIP = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebClientPCAccount")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.SMPClientPCMonitor")>  _
Partial Public Class SMPClientPCMonitor
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ClientPCIP As String
	
	Private _PingTimeOutSeconds As System.Nullable(Of Integer)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnClientPCIPChanging(value As String)
    End Sub
    Partial Private Sub OnClientPCIPChanged()
    End Sub
    Partial Private Sub OnPingTimeOutSecondsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPingTimeOutSecondsChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientPCIP", DbType:="Char(15) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ClientPCIP() As String
		Get
			Return Me._ClientPCIP
		End Get
		Set
			If (String.Equals(Me._ClientPCIP, value) = false) Then
				Me.OnClientPCIPChanging(value)
				Me.SendPropertyChanging
				Me._ClientPCIP = value
				Me.SendPropertyChanged("ClientPCIP")
				Me.OnClientPCIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PingTimeOutSeconds", DbType:="Int")>  _
	Public Property PingTimeOutSeconds() As System.Nullable(Of Integer)
		Get
			Return Me._PingTimeOutSeconds
		End Get
		Set
			If (Me._PingTimeOutSeconds.Equals(value) = false) Then
				Me.OnPingTimeOutSecondsChanging(value)
				Me.SendPropertyChanging
				Me._PingTimeOutSeconds = value
				Me.SendPropertyChanged("PingTimeOutSeconds")
				Me.OnPingTimeOutSecondsChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebGroupAccount")>  _
Partial Public Class WebGroupAccount
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GroupCode As String
	
	Private _GroupName As String
	
	Private _Memo1 As String
	
	Private _WebClientPCAccountTOWebGroupAccount As EntitySet(Of WebClientPCAccountTOWebGroupAccount)
	
	Private _WebLoginAccountToWebGroupAccount As EntitySet(Of WebLoginAccountToWebGroupAccount)
	
	Private _WebGroupAuthority As EntitySet(Of WebGroupAuthority)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGroupCodeChanging(value As String)
    End Sub
    Partial Private Sub OnGroupCodeChanged()
    End Sub
    Partial Private Sub OnGroupNameChanging(value As String)
    End Sub
    Partial Private Sub OnGroupNameChanged()
    End Sub
    Partial Private Sub OnMemo1Changing(value As String)
    End Sub
    Partial Private Sub OnMemo1Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebClientPCAccountTOWebGroupAccount = New EntitySet(Of WebClientPCAccountTOWebGroupAccount)(AddressOf Me.attach_WebClientPCAccountTOWebGroupAccount, AddressOf Me.detach_WebClientPCAccountTOWebGroupAccount)
		Me._WebLoginAccountToWebGroupAccount = New EntitySet(Of WebLoginAccountToWebGroupAccount)(AddressOf Me.attach_WebLoginAccountToWebGroupAccount, AddressOf Me.detach_WebLoginAccountToWebGroupAccount)
		Me._WebGroupAuthority = New EntitySet(Of WebGroupAuthority)(AddressOf Me.attach_WebGroupAuthority, AddressOf Me.detach_WebGroupAuthority)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property GroupCode() As String
		Get
			Return Me._GroupCode
		End Get
		Set
			If (String.Equals(Me._GroupCode, value) = false) Then
				Me.OnGroupCodeChanging(value)
				Me.SendPropertyChanging
				Me._GroupCode = value
				Me.SendPropertyChanged("GroupCode")
				Me.OnGroupCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupName", DbType:="Char(30)")>  _
	Public Property GroupName() As String
		Get
			Return Me._GroupName
		End Get
		Set
			If (String.Equals(Me._GroupName, value) = false) Then
				Me.OnGroupNameChanging(value)
				Me.SendPropertyChanging
				Me._GroupName = value
				Me.SendPropertyChanged("GroupName")
				Me.OnGroupNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo1", DbType:="Char(200)")>  _
	Public Property Memo1() As String
		Get
			Return Me._Memo1
		End Get
		Set
			If (String.Equals(Me._Memo1, value) = false) Then
				Me.OnMemo1Changing(value)
				Me.SendPropertyChanging
				Me._Memo1 = value
				Me.SendPropertyChanged("Memo1")
				Me.OnMemo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebGroupAccount_WebClientPCAccountTOWebGroupAccount", Storage:="_WebClientPCAccountTOWebGroupAccount", ThisKey:="GroupCode", OtherKey:="GroupCode")>  _
	Public Property WebClientPCAccountTOWebGroupAccount() As EntitySet(Of WebClientPCAccountTOWebGroupAccount)
		Get
			Return Me._WebClientPCAccountTOWebGroupAccount
		End Get
		Set
			Me._WebClientPCAccountTOWebGroupAccount.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebGroupAccount_WebLoginAccountToWebGroupAccount", Storage:="_WebLoginAccountToWebGroupAccount", ThisKey:="GroupCode", OtherKey:="GroupCode")>  _
	Public Property WebLoginAccountToWebGroupAccount() As EntitySet(Of WebLoginAccountToWebGroupAccount)
		Get
			Return Me._WebLoginAccountToWebGroupAccount
		End Get
		Set
			Me._WebLoginAccountToWebGroupAccount.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebGroupAccount_WebGroupAuthority", Storage:="_WebGroupAuthority", ThisKey:="GroupCode", OtherKey:="GroupCode")>  _
	Public Property WebGroupAuthority() As EntitySet(Of WebGroupAuthority)
		Get
			Return Me._WebGroupAuthority
		End Get
		Set
			Me._WebGroupAuthority.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_WebClientPCAccountTOWebGroupAccount(ByVal entity As WebClientPCAccountTOWebGroupAccount)
		Me.SendPropertyChanging
		entity.WebGroupAccount = Me
	End Sub
	
	Private Sub detach_WebClientPCAccountTOWebGroupAccount(ByVal entity As WebClientPCAccountTOWebGroupAccount)
		Me.SendPropertyChanging
		entity.WebGroupAccount = Nothing
	End Sub
	
	Private Sub attach_WebLoginAccountToWebGroupAccount(ByVal entity As WebLoginAccountToWebGroupAccount)
		Me.SendPropertyChanging
		entity.WebGroupAccount = Me
	End Sub
	
	Private Sub detach_WebLoginAccountToWebGroupAccount(ByVal entity As WebLoginAccountToWebGroupAccount)
		Me.SendPropertyChanging
		entity.WebGroupAccount = Nothing
	End Sub
	
	Private Sub attach_WebGroupAuthority(ByVal entity As WebGroupAuthority)
		Me.SendPropertyChanging
		entity.WebGroupAccount = Me
	End Sub
	
	Private Sub detach_WebGroupAuthority(ByVal entity As WebGroupAuthority)
		Me.SendPropertyChanging
		entity.WebGroupAccount = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebClientPCAccountTOWebGroupAccount")>  _
Partial Public Class WebClientPCAccountTOWebGroupAccount
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ClientIP As String
	
	Private _GroupCode As String
	
	Private _Memo1 As String
	
	Private _WebGroupAccount As EntityRef(Of WebGroupAccount)
	
	Private _WebClientPCAccount As EntityRef(Of WebClientPCAccount)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnClientIPChanging(value As String)
    End Sub
    Partial Private Sub OnClientIPChanged()
    End Sub
    Partial Private Sub OnGroupCodeChanging(value As String)
    End Sub
    Partial Private Sub OnGroupCodeChanged()
    End Sub
    Partial Private Sub OnMemo1Changing(value As String)
    End Sub
    Partial Private Sub OnMemo1Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebGroupAccount = CType(Nothing, EntityRef(Of WebGroupAccount))
		Me._WebClientPCAccount = CType(Nothing, EntityRef(Of WebClientPCAccount))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientIP", DbType:="Char(15) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ClientIP() As String
		Get
			Return Me._ClientIP
		End Get
		Set
			If (String.Equals(Me._ClientIP, value) = false) Then
				If Me._WebClientPCAccount.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnClientIPChanging(value)
				Me.SendPropertyChanging
				Me._ClientIP = value
				Me.SendPropertyChanged("ClientIP")
				Me.OnClientIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property GroupCode() As String
		Get
			Return Me._GroupCode
		End Get
		Set
			If (String.Equals(Me._GroupCode, value) = false) Then
				If Me._WebGroupAccount.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnGroupCodeChanging(value)
				Me.SendPropertyChanging
				Me._GroupCode = value
				Me.SendPropertyChanged("GroupCode")
				Me.OnGroupCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo1", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Memo1() As String
		Get
			Return Me._Memo1
		End Get
		Set
			If (String.Equals(Me._Memo1, value) = false) Then
				Me.OnMemo1Changing(value)
				Me.SendPropertyChanging
				Me._Memo1 = value
				Me.SendPropertyChanged("Memo1")
				Me.OnMemo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebGroupAccount_WebClientPCAccountTOWebGroupAccount", Storage:="_WebGroupAccount", ThisKey:="GroupCode", OtherKey:="GroupCode", IsForeignKey:=true)>  _
	Public Property WebGroupAccount() As WebGroupAccount
		Get
			Return Me._WebGroupAccount.Entity
		End Get
		Set
			Dim previousValue As WebGroupAccount = Me._WebGroupAccount.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebGroupAccount.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebGroupAccount.Entity = Nothing
					previousValue.WebClientPCAccountTOWebGroupAccount.Remove(Me)
				End If
				Me._WebGroupAccount.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebClientPCAccountTOWebGroupAccount.Add(Me)
					Me._GroupCode = value.GroupCode
				Else
					Me._GroupCode = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebGroupAccount")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebClientPCAccount_WebClientPCAccountTOWebGroupAccount", Storage:="_WebClientPCAccount", ThisKey:="ClientIP", OtherKey:="ClientIP", IsForeignKey:=true)>  _
	Public Property WebClientPCAccount() As WebClientPCAccount
		Get
			Return Me._WebClientPCAccount.Entity
		End Get
		Set
			Dim previousValue As WebClientPCAccount = Me._WebClientPCAccount.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebClientPCAccount.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebClientPCAccount.Entity = Nothing
					previousValue.WebClientPCAccountTOWebGroupAccount.Remove(Me)
				End If
				Me._WebClientPCAccount.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebClientPCAccountTOWebGroupAccount.Add(Me)
					Me._ClientIP = value.ClientIP
				Else
					Me._ClientIP = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebClientPCAccount")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebLoginAccountToWebGroupAccount")>  _
Partial Public Class WebLoginAccountToWebGroupAccount
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WindowLoginName As String
	
	Private _GroupCode As String
	
	Private _Memo1 As String
	
	Private _WebGroupAccount As EntityRef(Of WebGroupAccount)
	
	Private _WebLoginAccount As EntityRef(Of WebLoginAccount)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWindowLoginNameChanging(value As String)
    End Sub
    Partial Private Sub OnWindowLoginNameChanged()
    End Sub
    Partial Private Sub OnGroupCodeChanging(value As String)
    End Sub
    Partial Private Sub OnGroupCodeChanged()
    End Sub
    Partial Private Sub OnMemo1Changing(value As String)
    End Sub
    Partial Private Sub OnMemo1Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebGroupAccount = CType(Nothing, EntityRef(Of WebGroupAccount))
		Me._WebLoginAccount = CType(Nothing, EntityRef(Of WebLoginAccount))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WindowLoginName", DbType:="Char(13) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property WindowLoginName() As String
		Get
			Return Me._WindowLoginName
		End Get
		Set
			If (String.Equals(Me._WindowLoginName, value) = false) Then
				If Me._WebLoginAccount.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnWindowLoginNameChanging(value)
				Me.SendPropertyChanging
				Me._WindowLoginName = value
				Me.SendPropertyChanged("WindowLoginName")
				Me.OnWindowLoginNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property GroupCode() As String
		Get
			Return Me._GroupCode
		End Get
		Set
			If (String.Equals(Me._GroupCode, value) = false) Then
				If Me._WebGroupAccount.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnGroupCodeChanging(value)
				Me.SendPropertyChanging
				Me._GroupCode = value
				Me.SendPropertyChanged("GroupCode")
				Me.OnGroupCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo1", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Memo1() As String
		Get
			Return Me._Memo1
		End Get
		Set
			If (String.Equals(Me._Memo1, value) = false) Then
				Me.OnMemo1Changing(value)
				Me.SendPropertyChanging
				Me._Memo1 = value
				Me.SendPropertyChanged("Memo1")
				Me.OnMemo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebGroupAccount_WebLoginAccountToWebGroupAccount", Storage:="_WebGroupAccount", ThisKey:="GroupCode", OtherKey:="GroupCode", IsForeignKey:=true)>  _
	Public Property WebGroupAccount() As WebGroupAccount
		Get
			Return Me._WebGroupAccount.Entity
		End Get
		Set
			Dim previousValue As WebGroupAccount = Me._WebGroupAccount.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebGroupAccount.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebGroupAccount.Entity = Nothing
					previousValue.WebLoginAccountToWebGroupAccount.Remove(Me)
				End If
				Me._WebGroupAccount.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebLoginAccountToWebGroupAccount.Add(Me)
					Me._GroupCode = value.GroupCode
				Else
					Me._GroupCode = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebGroupAccount")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebLoginAccount_WebLoginAccountToWebGroupAccount", Storage:="_WebLoginAccount", ThisKey:="WindowLoginName", OtherKey:="WindowLoginName", IsForeignKey:=true)>  _
	Public Property WebLoginAccount() As WebLoginAccount
		Get
			Return Me._WebLoginAccount.Entity
		End Get
		Set
			Dim previousValue As WebLoginAccount = Me._WebLoginAccount.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebLoginAccount.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebLoginAccount.Entity = Nothing
					previousValue.WebLoginAccountToWebGroupAccount.Remove(Me)
				End If
				Me._WebLoginAccount.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebLoginAccountToWebGroupAccount.Add(Me)
					Me._WindowLoginName = value.WindowLoginName
				Else
					Me._WindowLoginName = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebLoginAccount")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebGroupAuthority")>  _
Partial Public Class WebGroupAuthority
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _GroupCode As String
	
	Private _FK_SystemCode As String
	
	Private _FK_SystemFunctionCode As String
	
	Private _Description As String
	
	Private _WebGroupAccount As EntityRef(Of WebGroupAccount)
	
	Private _WebSystemFunction As EntityRef(Of WebSystemFunction)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnGroupCodeChanging(value As String)
    End Sub
    Partial Private Sub OnGroupCodeChanged()
    End Sub
    Partial Private Sub OnFK_SystemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SystemCodeChanged()
    End Sub
    Partial Private Sub OnFK_SystemFunctionCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SystemFunctionCodeChanged()
    End Sub
    Partial Private Sub OnDescriptionChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptionChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebGroupAccount = CType(Nothing, EntityRef(Of WebGroupAccount))
		Me._WebSystemFunction = CType(Nothing, EntityRef(Of WebSystemFunction))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GroupCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property GroupCode() As String
		Get
			Return Me._GroupCode
		End Get
		Set
			If (String.Equals(Me._GroupCode, value) = false) Then
				If Me._WebGroupAccount.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnGroupCodeChanging(value)
				Me.SendPropertyChanging
				Me._GroupCode = value
				Me.SendPropertyChanged("GroupCode")
				Me.OnGroupCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SystemCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_SystemCode() As String
		Get
			Return Me._FK_SystemCode
		End Get
		Set
			If (String.Equals(Me._FK_SystemCode, value) = false) Then
				If Me._WebSystemFunction.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_SystemCodeChanging(value)
				Me.SendPropertyChanging
				Me._FK_SystemCode = value
				Me.SendPropertyChanged("FK_SystemCode")
				Me.OnFK_SystemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SystemFunctionCode", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_SystemFunctionCode() As String
		Get
			Return Me._FK_SystemFunctionCode
		End Get
		Set
			If (String.Equals(Me._FK_SystemFunctionCode, value) = false) Then
				If Me._WebSystemFunction.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_SystemFunctionCodeChanging(value)
				Me.SendPropertyChanging
				Me._FK_SystemFunctionCode = value
				Me.SendPropertyChanged("FK_SystemFunctionCode")
				Me.OnFK_SystemFunctionCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Description", DbType:="Char(100)")>  _
	Public Property Description() As String
		Get
			Return Me._Description
		End Get
		Set
			If (String.Equals(Me._Description, value) = false) Then
				Me.OnDescriptionChanging(value)
				Me.SendPropertyChanging
				Me._Description = value
				Me.SendPropertyChanged("Description")
				Me.OnDescriptionChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebGroupAccount_WebGroupAuthority", Storage:="_WebGroupAccount", ThisKey:="GroupCode", OtherKey:="GroupCode", IsForeignKey:=true)>  _
	Public Property WebGroupAccount() As WebGroupAccount
		Get
			Return Me._WebGroupAccount.Entity
		End Get
		Set
			Dim previousValue As WebGroupAccount = Me._WebGroupAccount.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebGroupAccount.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebGroupAccount.Entity = Nothing
					previousValue.WebGroupAuthority.Remove(Me)
				End If
				Me._WebGroupAccount.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebGroupAuthority.Add(Me)
					Me._GroupCode = value.GroupCode
				Else
					Me._GroupCode = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebGroupAccount")
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebSystemFunction_WebGroupAuthority", Storage:="_WebSystemFunction", ThisKey:="FK_SystemFunctionCode,FK_SystemCode", OtherKey:="FunctionCode,SystemCode", IsForeignKey:=true)>  _
	Public Property WebSystemFunction() As WebSystemFunction
		Get
			Return Me._WebSystemFunction.Entity
		End Get
		Set
			Dim previousValue As WebSystemFunction = Me._WebSystemFunction.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebSystemFunction.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebSystemFunction.Entity = Nothing
					previousValue.WebGroupAuthority.Remove(Me)
				End If
				Me._WebSystemFunction.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebGroupAuthority.Add(Me)
					Me._FK_SystemFunctionCode = value.FunctionCode
					Me._FK_SystemCode = value.SystemCode
				Else
					Me._FK_SystemFunctionCode = CType(Nothing, String)
					Me._FK_SystemCode = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebSystemFunction")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebClientPCAccount")>  _
Partial Public Class WebClientPCAccount
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ClientIP As String
	
	Private _PCName As String
	
	Private _Memo1 As String
	
	Private _Email As String
	
	Private _WebClientPCAuthority As EntitySet(Of WebClientPCAuthority)
	
	Private _WebClientPCAccountTOWebGroupAccount As EntitySet(Of WebClientPCAccountTOWebGroupAccount)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnClientIPChanging(value As String)
    End Sub
    Partial Private Sub OnClientIPChanged()
    End Sub
    Partial Private Sub OnPCNameChanging(value As String)
    End Sub
    Partial Private Sub OnPCNameChanged()
    End Sub
    Partial Private Sub OnMemo1Changing(value As String)
    End Sub
    Partial Private Sub OnMemo1Changed()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebClientPCAuthority = New EntitySet(Of WebClientPCAuthority)(AddressOf Me.attach_WebClientPCAuthority, AddressOf Me.detach_WebClientPCAuthority)
		Me._WebClientPCAccountTOWebGroupAccount = New EntitySet(Of WebClientPCAccountTOWebGroupAccount)(AddressOf Me.attach_WebClientPCAccountTOWebGroupAccount, AddressOf Me.detach_WebClientPCAccountTOWebGroupAccount)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ClientIP", DbType:="Char(15) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ClientIP() As String
		Get
			Return Me._ClientIP
		End Get
		Set
			If (String.Equals(Me._ClientIP, value) = false) Then
				Me.OnClientIPChanging(value)
				Me.SendPropertyChanging
				Me._ClientIP = value
				Me.SendPropertyChanged("ClientIP")
				Me.OnClientIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PCName", DbType:="Char(10)")>  _
	Public Property PCName() As String
		Get
			Return Me._PCName
		End Get
		Set
			If (String.Equals(Me._PCName, value) = false) Then
				Me.OnPCNameChanging(value)
				Me.SendPropertyChanging
				Me._PCName = value
				Me.SendPropertyChanged("PCName")
				Me.OnPCNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo1", DbType:="Char(255)")>  _
	Public Property Memo1() As String
		Get
			Return Me._Memo1
		End Get
		Set
			If (String.Equals(Me._Memo1, value) = false) Then
				Me.OnMemo1Changing(value)
				Me.SendPropertyChanging
				Me._Memo1 = value
				Me.SendPropertyChanged("Memo1")
				Me.OnMemo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="Char(30)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebClientPCAccount_WebClientPCAuthority", Storage:="_WebClientPCAuthority", ThisKey:="ClientIP", OtherKey:="FKWebClientPCAccount_ClientIP")>  _
	Public Property WebClientPCAuthority() As EntitySet(Of WebClientPCAuthority)
		Get
			Return Me._WebClientPCAuthority
		End Get
		Set
			Me._WebClientPCAuthority.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebClientPCAccount_WebClientPCAccountTOWebGroupAccount", Storage:="_WebClientPCAccountTOWebGroupAccount", ThisKey:="ClientIP", OtherKey:="ClientIP")>  _
	Public Property WebClientPCAccountTOWebGroupAccount() As EntitySet(Of WebClientPCAccountTOWebGroupAccount)
		Get
			Return Me._WebClientPCAccountTOWebGroupAccount
		End Get
		Set
			Me._WebClientPCAccountTOWebGroupAccount.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_WebClientPCAuthority(ByVal entity As WebClientPCAuthority)
		Me.SendPropertyChanging
		entity.WebClientPCAccount = Me
	End Sub
	
	Private Sub detach_WebClientPCAuthority(ByVal entity As WebClientPCAuthority)
		Me.SendPropertyChanging
		entity.WebClientPCAccount = Nothing
	End Sub
	
	Private Sub attach_WebClientPCAccountTOWebGroupAccount(ByVal entity As WebClientPCAccountTOWebGroupAccount)
		Me.SendPropertyChanging
		entity.WebClientPCAccount = Me
	End Sub
	
	Private Sub detach_WebClientPCAccountTOWebGroupAccount(ByVal entity As WebClientPCAccountTOWebGroupAccount)
		Me.SendPropertyChanging
		entity.WebClientPCAccount = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebLoginAccount")>  _
Partial Public Class WebLoginAccount
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WindowLoginName As String
	
	Private _DisplayName As String
	
	Private _Memo1 As String
	
	Private _Email As String
	
	Private _WebUserAuthority As EntitySet(Of WebUserAuthority)
	
	Private _WebLoginAccountToWebGroupAccount As EntitySet(Of WebLoginAccountToWebGroupAccount)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWindowLoginNameChanging(value As String)
    End Sub
    Partial Private Sub OnWindowLoginNameChanged()
    End Sub
    Partial Private Sub OnDisplayNameChanging(value As String)
    End Sub
    Partial Private Sub OnDisplayNameChanged()
    End Sub
    Partial Private Sub OnMemo1Changing(value As String)
    End Sub
    Partial Private Sub OnMemo1Changed()
    End Sub
    Partial Private Sub OnEmailChanging(value As String)
    End Sub
    Partial Private Sub OnEmailChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebUserAuthority = New EntitySet(Of WebUserAuthority)(AddressOf Me.attach_WebUserAuthority, AddressOf Me.detach_WebUserAuthority)
		Me._WebLoginAccountToWebGroupAccount = New EntitySet(Of WebLoginAccountToWebGroupAccount)(AddressOf Me.attach_WebLoginAccountToWebGroupAccount, AddressOf Me.detach_WebLoginAccountToWebGroupAccount)
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WindowLoginName", DbType:="Char(13) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property WindowLoginName() As String
		Get
			Return Me._WindowLoginName
		End Get
		Set
			If (String.Equals(Me._WindowLoginName, value) = false) Then
				Me.OnWindowLoginNameChanging(value)
				Me.SendPropertyChanging
				Me._WindowLoginName = value
				Me.SendPropertyChanged("WindowLoginName")
				Me.OnWindowLoginNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayName", DbType:="Char(20)")>  _
	Public Property DisplayName() As String
		Get
			Return Me._DisplayName
		End Get
		Set
			If (String.Equals(Me._DisplayName, value) = false) Then
				Me.OnDisplayNameChanging(value)
				Me.SendPropertyChanging
				Me._DisplayName = value
				Me.SendPropertyChanged("DisplayName")
				Me.OnDisplayNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo1", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Memo1() As String
		Get
			Return Me._Memo1
		End Get
		Set
			If (String.Equals(Me._Memo1, value) = false) Then
				Me.OnMemo1Changing(value)
				Me.SendPropertyChanging
				Me._Memo1 = value
				Me.SendPropertyChanged("Memo1")
				Me.OnMemo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="Char(30)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me.OnEmailChanging(value)
				Me.SendPropertyChanging
				Me._Email = value
				Me.SendPropertyChanged("Email")
				Me.OnEmailChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebLoginAccount_WebUserAuthority", Storage:="_WebUserAuthority", ThisKey:="WindowLoginName", OtherKey:="FKWebLoginAccount_WindowLoginName")>  _
	Public Property WebUserAuthority() As EntitySet(Of WebUserAuthority)
		Get
			Return Me._WebUserAuthority
		End Get
		Set
			Me._WebUserAuthority.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebLoginAccount_WebLoginAccountToWebGroupAccount", Storage:="_WebLoginAccountToWebGroupAccount", ThisKey:="WindowLoginName", OtherKey:="WindowLoginName")>  _
	Public Property WebLoginAccountToWebGroupAccount() As EntitySet(Of WebLoginAccountToWebGroupAccount)
		Get
			Return Me._WebLoginAccountToWebGroupAccount
		End Get
		Set
			Me._WebLoginAccountToWebGroupAccount.Assign(value)
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_WebUserAuthority(ByVal entity As WebUserAuthority)
		Me.SendPropertyChanging
		entity.WebLoginAccount = Me
	End Sub
	
	Private Sub detach_WebUserAuthority(ByVal entity As WebUserAuthority)
		Me.SendPropertyChanging
		entity.WebLoginAccount = Nothing
	End Sub
	
	Private Sub attach_WebLoginAccountToWebGroupAccount(ByVal entity As WebLoginAccountToWebGroupAccount)
		Me.SendPropertyChanging
		entity.WebLoginAccount = Me
	End Sub
	
	Private Sub detach_WebLoginAccountToWebGroupAccount(ByVal entity As WebLoginAccountToWebGroupAccount)
		Me.SendPropertyChanging
		entity.WebLoginAccount = Nothing
	End Sub
End Class
