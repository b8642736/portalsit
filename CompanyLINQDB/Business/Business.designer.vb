'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:4.0.30319.34014
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="Business")>  _
Partial Public Class BusinessDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "擴充性方法定義"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertGuestSues(instance As GuestSues)
    End Sub
  Partial Private Sub UpdateGuestSues(instance As GuestSues)
    End Sub
  Partial Private Sub DeleteGuestSues(instance As GuestSues)
    End Sub
  Partial Private Sub InsertGuestSuesWatchRecord(instance As GuestSuesWatchRecord)
    End Sub
  Partial Private Sub UpdateGuestSuesWatchRecord(instance As GuestSuesWatchRecord)
    End Sub
  Partial Private Sub DeleteGuestSuesWatchRecord(instance As GuestSuesWatchRecord)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CompanyLINQDB.My.MySettings.Default.BusinessConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property GuestSues() As System.Data.Linq.Table(Of GuestSues)
		Get
			Return Me.GetTable(Of GuestSues)
		End Get
	End Property
	
	Public ReadOnly Property GuestSuesWatchRecord() As System.Data.Linq.Table(Of GuestSuesWatchRecord)
		Get
			Return Me.GetTable(Of GuestSuesWatchRecord)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GuestSues")>  _
Partial Public Class GuestSues
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As Decimal
	
	Private _SubRecordNumber As Decimal
	
	Private _CustomerID As String
	
	Private _ContectHuman As String
	
	Private _Undertaker As String
	
	Private _RecordTime As System.Nullable(Of Date)
	
	Private _Describe As String
	
	Private _ProcessState As System.Nullable(Of Decimal)
	
	Private _WindowLoginName As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnSubRecordNumberChanging(value As Decimal)
    End Sub
    Partial Private Sub OnSubRecordNumberChanged()
    End Sub
    Partial Private Sub OnCustomerIDChanging(value As String)
    End Sub
    Partial Private Sub OnCustomerIDChanged()
    End Sub
    Partial Private Sub OnContectHumanChanging(value As String)
    End Sub
    Partial Private Sub OnContectHumanChanged()
    End Sub
    Partial Private Sub OnUndertakerChanging(value As String)
    End Sub
    Partial Private Sub OnUndertakerChanged()
    End Sub
    Partial Private Sub OnRecordTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRecordTimeChanged()
    End Sub
    Partial Private Sub OnDescribeChanging(value As String)
    End Sub
    Partial Private Sub OnDescribeChanged()
    End Sub
    Partial Private Sub OnProcessStateChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnProcessStateChanged()
    End Sub
    Partial Private Sub OnWindowLoginNameChanging(value As String)
    End Sub
    Partial Private Sub OnWindowLoginNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Decimal(9,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As Decimal
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SubRecordNumber", DbType:="Decimal(5,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SubRecordNumber() As Decimal
		Get
			Return Me._SubRecordNumber
		End Get
		Set
			If ((Me._SubRecordNumber = value)  _
						= false) Then
				Me.OnSubRecordNumberChanging(value)
				Me.SendPropertyChanging
				Me._SubRecordNumber = value
				Me.SendPropertyChanged("SubRecordNumber")
				Me.OnSubRecordNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CustomerID", DbType:="NChar(5)")>  _
	Public Property CustomerID() As String
		Get
			Return Me._CustomerID
		End Get
		Set
			If (String.Equals(Me._CustomerID, value) = false) Then
				Me.OnCustomerIDChanging(value)
				Me.SendPropertyChanging
				Me._CustomerID = value
				Me.SendPropertyChanged("CustomerID")
				Me.OnCustomerIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContectHuman", DbType:="NChar(5)")>  _
	Public Property ContectHuman() As String
		Get
			Return Me._ContectHuman
		End Get
		Set
			If (String.Equals(Me._ContectHuman, value) = false) Then
				Me.OnContectHumanChanging(value)
				Me.SendPropertyChanging
				Me._ContectHuman = value
				Me.SendPropertyChanged("ContectHuman")
				Me.OnContectHumanChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Undertaker", DbType:="NChar(5)")>  _
	Public Property Undertaker() As String
		Get
			Return Me._Undertaker
		End Get
		Set
			If (String.Equals(Me._Undertaker, value) = false) Then
				Me.OnUndertakerChanging(value)
				Me.SendPropertyChanging
				Me._Undertaker = value
				Me.SendPropertyChanged("Undertaker")
				Me.OnUndertakerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RecordTime", DbType:="DateTime")>  _
	Public Property RecordTime() As System.Nullable(Of Date)
		Get
			Return Me._RecordTime
		End Get
		Set
			If (Me._RecordTime.Equals(value) = false) Then
				Me.OnRecordTimeChanging(value)
				Me.SendPropertyChanging
				Me._RecordTime = value
				Me.SendPropertyChanged("RecordTime")
				Me.OnRecordTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Describe", DbType:="NVarChar(MAX)")>  _
	Public Property Describe() As String
		Get
			Return Me._Describe
		End Get
		Set
			If (String.Equals(Me._Describe, value) = false) Then
				Me.OnDescribeChanging(value)
				Me.SendPropertyChanging
				Me._Describe = value
				Me.SendPropertyChanged("Describe")
				Me.OnDescribeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessState", DbType:="Decimal(2,0)")>  _
	Public Property ProcessState() As System.Nullable(Of Decimal)
		Get
			Return Me._ProcessState
		End Get
		Set
			If (Me._ProcessState.Equals(value) = false) Then
				Me.OnProcessStateChanging(value)
				Me.SendPropertyChanging
				Me._ProcessState = value
				Me.SendPropertyChanged("ProcessState")
				Me.OnProcessStateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WindowLoginName", DbType:="NChar(13)")>  _
	Public Property WindowLoginName() As String
		Get
			Return Me._WindowLoginName
		End Get
		Set
			If (String.Equals(Me._WindowLoginName, value) = false) Then
				Me.OnWindowLoginNameChanging(value)
				Me.SendPropertyChanging
				Me._WindowLoginName = value
				Me.SendPropertyChanged("WindowLoginName")
				Me.OnWindowLoginNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.GuestSuesWatchRecord")>  _
Partial Public Class GuestSuesWatchRecord
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _WatchTime As Date
	
	Private _FK_GuestSuesID As Decimal
	
	Private _WindowLoginName As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnWatchTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnWatchTimeChanged()
    End Sub
    Partial Private Sub OnFK_GuestSuesIDChanging(value As Decimal)
    End Sub
    Partial Private Sub OnFK_GuestSuesIDChanged()
    End Sub
    Partial Private Sub OnWindowLoginNameChanging(value As String)
    End Sub
    Partial Private Sub OnWindowLoginNameChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WatchTime", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property WatchTime() As Date
		Get
			Return Me._WatchTime
		End Get
		Set
			If ((Me._WatchTime = value)  _
						= false) Then
				Me.OnWatchTimeChanging(value)
				Me.SendPropertyChanging
				Me._WatchTime = value
				Me.SendPropertyChanged("WatchTime")
				Me.OnWatchTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_GuestSuesID", DbType:="Decimal(9,0) NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FK_GuestSuesID() As Decimal
		Get
			Return Me._FK_GuestSuesID
		End Get
		Set
			If ((Me._FK_GuestSuesID = value)  _
						= false) Then
				Me.OnFK_GuestSuesIDChanging(value)
				Me.SendPropertyChanging
				Me._FK_GuestSuesID = value
				Me.SendPropertyChanged("FK_GuestSuesID")
				Me.OnFK_GuestSuesIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_WindowLoginName", DbType:="NChar(13) NOT NULL", CanBeNull:=false)>  _
	Public Property WindowLoginName() As String
		Get
			Return Me._WindowLoginName
		End Get
		Set
			If (String.Equals(Me._WindowLoginName, value) = false) Then
				Me.OnWindowLoginNameChanging(value)
				Me.SendPropertyChanging
				Me._WindowLoginName = value
				Me.SendPropertyChanged("WindowLoginName")
				Me.OnWindowLoginNameChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
