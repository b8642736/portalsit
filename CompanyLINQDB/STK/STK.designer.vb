'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:4.0.30319.1
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="STK")>  _
Partial Public Class STKDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "擴充性方法定義"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertToWeight(instance As ToWeight)
    End Sub
  Partial Private Sub UpdateToWeight(instance As ToWeight)
    End Sub
  Partial Private Sub DeleteToWeight(instance As ToWeight)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CompanyLINQDB.My.MySettings.Default.Server1_STK, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property ToWeight() As System.Data.Linq.Table(Of ToWeight)
		Get
			Return Me.GetTable(Of ToWeight)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.ToWeight")>  _
Partial Public Class ToWeight
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _CoilNumber As String
	
	Private _CoilSubNumber As String
	
	Private _SaveTime As Date
	
	Private _Weight As Double
	
	Private _SaveState As Integer
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnCoilNumberChanging(value As String)
    End Sub
    Partial Private Sub OnCoilNumberChanged()
    End Sub
    Partial Private Sub OnCoilSubNumberChanging(value As String)
    End Sub
    Partial Private Sub OnCoilSubNumberChanged()
    End Sub
    Partial Private Sub OnSaveTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnSaveTimeChanged()
    End Sub
    Partial Private Sub OnWeightChanging(value As Double)
    End Sub
    Partial Private Sub OnWeightChanged()
    End Sub
    Partial Private Sub OnSaveStateChanging(value As Integer)
    End Sub
    Partial Private Sub OnSaveStateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoilNumber", DbType:="NVarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CoilNumber() As String
		Get
			Return Me._CoilNumber
		End Get
		Set
			If (String.Equals(Me._CoilNumber, value) = false) Then
				Me.OnCoilNumberChanging(value)
				Me.SendPropertyChanging
				Me._CoilNumber = value
				Me.SendPropertyChanged("CoilNumber")
				Me.OnCoilNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CoilSubNumber", DbType:="NVarChar(5) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property CoilSubNumber() As String
		Get
			Return Me._CoilSubNumber
		End Get
		Set
			If (String.Equals(Me._CoilSubNumber, value) = false) Then
				Me.OnCoilSubNumberChanging(value)
				Me.SendPropertyChanging
				Me._CoilSubNumber = value
				Me.SendPropertyChanged("CoilSubNumber")
				Me.OnCoilSubNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SaveTime", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property SaveTime() As Date
		Get
			Return Me._SaveTime
		End Get
		Set
			If ((Me._SaveTime = value)  _
						= false) Then
				Me.OnSaveTimeChanging(value)
				Me.SendPropertyChanging
				Me._SaveTime = value
				Me.SendPropertyChanged("SaveTime")
				Me.OnSaveTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Weight", DbType:="Float NOT NULL")>  _
	Public Property Weight() As Double
		Get
			Return Me._Weight
		End Get
		Set
			If ((Me._Weight = value)  _
						= false) Then
				Me.OnWeightChanging(value)
				Me.SendPropertyChanging
				Me._Weight = value
				Me.SendPropertyChanged("Weight")
				Me.OnWeightChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SaveState", DbType:="Int NOT NULL")>  _
	Public Property SaveState() As Integer
		Get
			Return Me._SaveState
		End Get
		Set
			If ((Me._SaveState = value)  _
						= false) Then
				Me.OnSaveStateChanging(value)
				Me.SendPropertyChanging
				Me._SaveState = value
				Me.SendPropertyChanged("SaveState")
				Me.OnSaveStateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
