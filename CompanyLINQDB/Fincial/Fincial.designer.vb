'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:4.0.30319.1
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="FincialBackup")>  _
Partial Public Class FincialDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "擴充性方法定義"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertBorrow(instance As Borrow)
    End Sub
  Partial Private Sub UpdateBorrow(instance As Borrow)
    End Sub
  Partial Private Sub DeleteBorrow(instance As Borrow)
    End Sub
  Partial Private Sub InsertBorrowPayMoney(instance As BorrowPayMoney)
    End Sub
  Partial Private Sub UpdateBorrowPayMoney(instance As BorrowPayMoney)
    End Sub
  Partial Private Sub DeleteBorrowPayMoney(instance As BorrowPayMoney)
    End Sub
  Partial Private Sub InsertBorrowContract(instance As BorrowContract)
    End Sub
  Partial Private Sub UpdateBorrowContract(instance As BorrowContract)
    End Sub
  Partial Private Sub DeleteBorrowContract(instance As BorrowContract)
    End Sub
  Partial Private Sub InsertBorrowContractRate(instance As BorrowContractRate)
    End Sub
  Partial Private Sub UpdateBorrowContractRate(instance As BorrowContractRate)
    End Sub
  Partial Private Sub DeleteBorrowContractRate(instance As BorrowContractRate)
    End Sub
  Partial Private Sub InsertBorrowLCBill(instance As BorrowLCBill)
    End Sub
  Partial Private Sub UpdateBorrowLCBill(instance As BorrowLCBill)
    End Sub
  Partial Private Sub DeleteBorrowLCBill(instance As BorrowLCBill)
    End Sub
  Partial Private Sub InsertBorrowLCBillPayMoney(instance As BorrowLCBillPayMoney)
    End Sub
  Partial Private Sub UpdateBorrowLCBillPayMoney(instance As BorrowLCBillPayMoney)
    End Sub
  Partial Private Sub DeleteBorrowLCBillPayMoney(instance As BorrowLCBillPayMoney)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CompanyLINQDB.My.MySettings.Default.Server1_Fincial, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property Borrow() As System.Data.Linq.Table(Of Borrow)
		Get
			Return Me.GetTable(Of Borrow)
		End Get
	End Property
	
	Public ReadOnly Property BorrowPayMoney() As System.Data.Linq.Table(Of BorrowPayMoney)
		Get
			Return Me.GetTable(Of BorrowPayMoney)
		End Get
	End Property
	
	Public ReadOnly Property BorrowContract() As System.Data.Linq.Table(Of BorrowContract)
		Get
			Return Me.GetTable(Of BorrowContract)
		End Get
	End Property
	
	Public ReadOnly Property BorrowContractRate() As System.Data.Linq.Table(Of BorrowContractRate)
		Get
			Return Me.GetTable(Of BorrowContractRate)
		End Get
	End Property
	
	Public ReadOnly Property BorrowLCBill() As System.Data.Linq.Table(Of BorrowLCBill)
		Get
			Return Me.GetTable(Of BorrowLCBill)
		End Get
	End Property
	
	Public ReadOnly Property BorrowLCBillPayMoney() As System.Data.Linq.Table(Of BorrowLCBillPayMoney)
		Get
			Return Me.GetTable(Of BorrowLCBillPayMoney)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.Borrow")>  _
Partial Public Class Borrow
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FK_BankNumber As String
	
	Private _FK_ContractKind As String
	
	Private _FK_StartDate As Date
	
	Private _ID As Integer
	
	Private _BorrowStartDate As Date
	
	Private _BorrowEndDate As Date
	
	Private _BorrowMoney As Decimal
	
	Private _BorrowRate As System.Nullable(Of Double)
	
	Private _ExchangeRate As System.Nullable(Of Double)
	
	Private _ProcessEmployee As String
	
	Private _LCNumber As String
	
	Private _LCCaseNumber As String
	
	Private _LatePayMonths As System.Nullable(Of Integer)
	
	Private _RePaymentTimes As System.Nullable(Of Integer)
	
	Private _RePaymentBankNumber As String
	
	Private _PayRateKind As Integer
	
	Private _PayRateMoneyDayNumber As Integer
	
	Private _PayPrincipalMoneyDayNumber As Integer
	
	Private _Memo1 As String
	
	Private _PayRateMoney As Decimal
	
	Private _BorrowPayMoney As EntitySet(Of BorrowPayMoney)
	
	Private _BorrowLCBill As EntitySet(Of BorrowLCBill)
	
	Private _BorrowContract As EntityRef(Of BorrowContract)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFK_BankNumberChanging(value As String)
    End Sub
    Partial Private Sub OnFK_BankNumberChanged()
    End Sub
    Partial Private Sub OnFK_ContractKindChanging(value As String)
    End Sub
    Partial Private Sub OnFK_ContractKindChanged()
    End Sub
    Partial Private Sub OnFK_StartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnFK_StartDateChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnBorrowStartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnBorrowStartDateChanged()
    End Sub
    Partial Private Sub OnBorrowEndDateChanging(value As Date)
    End Sub
    Partial Private Sub OnBorrowEndDateChanged()
    End Sub
    Partial Private Sub OnBorrowMoneyChanging(value As Decimal)
    End Sub
    Partial Private Sub OnBorrowMoneyChanged()
    End Sub
    Partial Private Sub OnBorrowRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnBorrowRateChanged()
    End Sub
    Partial Private Sub OnExchangeRateChanging(value As System.Nullable(Of Double))
    End Sub
    Partial Private Sub OnExchangeRateChanged()
    End Sub
    Partial Private Sub OnProcessEmployeeChanging(value As String)
    End Sub
    Partial Private Sub OnProcessEmployeeChanged()
    End Sub
    Partial Private Sub OnLCNumberChanging(value As String)
    End Sub
    Partial Private Sub OnLCNumberChanged()
    End Sub
    Partial Private Sub OnLCCaseNumberChanging(value As String)
    End Sub
    Partial Private Sub OnLCCaseNumberChanged()
    End Sub
    Partial Private Sub OnLatePayMonthsChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnLatePayMonthsChanged()
    End Sub
    Partial Private Sub OnRePaymentTimesChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnRePaymentTimesChanged()
    End Sub
    Partial Private Sub OnRePaymentBankNumberChanging(value As String)
    End Sub
    Partial Private Sub OnRePaymentBankNumberChanged()
    End Sub
    Partial Private Sub OnPayRateKindChanging(value As Integer)
    End Sub
    Partial Private Sub OnPayRateKindChanged()
    End Sub
    Partial Private Sub OnPayRateMoneyDayNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnPayRateMoneyDayNumberChanged()
    End Sub
    Partial Private Sub OnPayPrincipalMoneyDayNumberChanging(value As Integer)
    End Sub
    Partial Private Sub OnPayPrincipalMoneyDayNumberChanged()
    End Sub
    Partial Private Sub OnMemo1Changing(value As String)
    End Sub
    Partial Private Sub OnMemo1Changed()
    End Sub
    Partial Private Sub OnPayRateMoneyChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPayRateMoneyChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._BorrowPayMoney = New EntitySet(Of BorrowPayMoney)(AddressOf Me.attach_BorrowPayMoney, AddressOf Me.detach_BorrowPayMoney)
		Me._BorrowLCBill = New EntitySet(Of BorrowLCBill)(AddressOf Me.attach_BorrowLCBill, AddressOf Me.detach_BorrowLCBill)
		Me._BorrowContract = CType(Nothing, EntityRef(Of BorrowContract))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BankNumber", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_BankNumber() As String
		Get
			Return Me._FK_BankNumber
		End Get
		Set
			If (String.Equals(Me._FK_BankNumber, value) = false) Then
				If Me._BorrowContract.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_BankNumberChanging(value)
				Me.SendPropertyChanging
				Me._FK_BankNumber = value
				Me.SendPropertyChanged("FK_BankNumber")
				Me.OnFK_BankNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_ContractKind", DbType:="Char(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_ContractKind() As String
		Get
			Return Me._FK_ContractKind
		End Get
		Set
			If (String.Equals(Me._FK_ContractKind, value) = false) Then
				If Me._BorrowContract.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_ContractKindChanging(value)
				Me.SendPropertyChanging
				Me._FK_ContractKind = value
				Me.SendPropertyChanged("FK_ContractKind")
				Me.OnFK_ContractKindChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_StartDate", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FK_StartDate() As Date
		Get
			Return Me._FK_StartDate
		End Get
		Set
			If ((Me._FK_StartDate = value)  _
						= false) Then
				If Me._BorrowContract.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_StartDateChanging(value)
				Me.SendPropertyChanging
				Me._FK_StartDate = value
				Me.SendPropertyChanged("FK_StartDate")
				Me.OnFK_StartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BorrowStartDate", DbType:="DateTime NOT NULL")>  _
	Public Property BorrowStartDate() As Date
		Get
			Return Me._BorrowStartDate
		End Get
		Set
			If ((Me._BorrowStartDate = value)  _
						= false) Then
				Me.OnBorrowStartDateChanging(value)
				Me.SendPropertyChanging
				Me._BorrowStartDate = value
				Me.SendPropertyChanged("BorrowStartDate")
				Me.OnBorrowStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BorrowEndDate", DbType:="DateTime NOT NULL")>  _
	Public Property BorrowEndDate() As Date
		Get
			Return Me._BorrowEndDate
		End Get
		Set
			If ((Me._BorrowEndDate = value)  _
						= false) Then
				Me.OnBorrowEndDateChanging(value)
				Me.SendPropertyChanging
				Me._BorrowEndDate = value
				Me.SendPropertyChanged("BorrowEndDate")
				Me.OnBorrowEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BorrowMoney", DbType:="Money NOT NULL")>  _
	Public Property BorrowMoney() As Decimal
		Get
			Return Me._BorrowMoney
		End Get
		Set
			If ((Me._BorrowMoney = value)  _
						= false) Then
				Me.OnBorrowMoneyChanging(value)
				Me.SendPropertyChanging
				Me._BorrowMoney = value
				Me.SendPropertyChanged("BorrowMoney")
				Me.OnBorrowMoneyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BorrowRate", DbType:="Float")>  _
	Public Property BorrowRate() As System.Nullable(Of Double)
		Get
			Return Me._BorrowRate
		End Get
		Set
			If (Me._BorrowRate.Equals(value) = false) Then
				Me.OnBorrowRateChanging(value)
				Me.SendPropertyChanging
				Me._BorrowRate = value
				Me.SendPropertyChanged("BorrowRate")
				Me.OnBorrowRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExchangeRate", DbType:="Float")>  _
	Public Property ExchangeRate() As System.Nullable(Of Double)
		Get
			Return Me._ExchangeRate
		End Get
		Set
			If (Me._ExchangeRate.Equals(value) = false) Then
				Me.OnExchangeRateChanging(value)
				Me.SendPropertyChanging
				Me._ExchangeRate = value
				Me.SendPropertyChanged("ExchangeRate")
				Me.OnExchangeRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessEmployee", DbType:="Char(16)")>  _
	Public Property ProcessEmployee() As String
		Get
			Return Me._ProcessEmployee
		End Get
		Set
			If (String.Equals(Me._ProcessEmployee, value) = false) Then
				Me.OnProcessEmployeeChanging(value)
				Me.SendPropertyChanging
				Me._ProcessEmployee = value
				Me.SendPropertyChanged("ProcessEmployee")
				Me.OnProcessEmployeeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCNumber", DbType:="Char(30)")>  _
	Public Property LCNumber() As String
		Get
			Return Me._LCNumber
		End Get
		Set
			If (String.Equals(Me._LCNumber, value) = false) Then
				Me.OnLCNumberChanging(value)
				Me.SendPropertyChanging
				Me._LCNumber = value
				Me.SendPropertyChanged("LCNumber")
				Me.OnLCNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LCCaseNumber", DbType:="Char(14)")>  _
	Public Property LCCaseNumber() As String
		Get
			Return Me._LCCaseNumber
		End Get
		Set
			If (String.Equals(Me._LCCaseNumber, value) = false) Then
				Me.OnLCCaseNumberChanging(value)
				Me.SendPropertyChanging
				Me._LCCaseNumber = value
				Me.SendPropertyChanged("LCCaseNumber")
				Me.OnLCCaseNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LatePayMonths", DbType:="Int")>  _
	Public Property LatePayMonths() As System.Nullable(Of Integer)
		Get
			Return Me._LatePayMonths
		End Get
		Set
			If (Me._LatePayMonths.Equals(value) = false) Then
				Me.OnLatePayMonthsChanging(value)
				Me.SendPropertyChanging
				Me._LatePayMonths = value
				Me.SendPropertyChanged("LatePayMonths")
				Me.OnLatePayMonthsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RePaymentTimes", DbType:="Int")>  _
	Public Property RePaymentTimes() As System.Nullable(Of Integer)
		Get
			Return Me._RePaymentTimes
		End Get
		Set
			If (Me._RePaymentTimes.Equals(value) = false) Then
				Me.OnRePaymentTimesChanging(value)
				Me.SendPropertyChanging
				Me._RePaymentTimes = value
				Me.SendPropertyChanged("RePaymentTimes")
				Me.OnRePaymentTimesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RePaymentBankNumber", DbType:="Char(10)")>  _
	Public Property RePaymentBankNumber() As String
		Get
			Return Me._RePaymentBankNumber
		End Get
		Set
			If (String.Equals(Me._RePaymentBankNumber, value) = false) Then
				Me.OnRePaymentBankNumberChanging(value)
				Me.SendPropertyChanging
				Me._RePaymentBankNumber = value
				Me.SendPropertyChanged("RePaymentBankNumber")
				Me.OnRePaymentBankNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayRateKind", DbType:="Int NOT NULL")>  _
	Public Property PayRateKind() As Integer
		Get
			Return Me._PayRateKind
		End Get
		Set
			If ((Me._PayRateKind = value)  _
						= false) Then
				Me.OnPayRateKindChanging(value)
				Me.SendPropertyChanging
				Me._PayRateKind = value
				Me.SendPropertyChanged("PayRateKind")
				Me.OnPayRateKindChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayRateMoneyDayNumber", DbType:="Int NOT NULL")>  _
	Public Property PayRateMoneyDayNumber() As Integer
		Get
			Return Me._PayRateMoneyDayNumber
		End Get
		Set
			If ((Me._PayRateMoneyDayNumber = value)  _
						= false) Then
				Me.OnPayRateMoneyDayNumberChanging(value)
				Me.SendPropertyChanging
				Me._PayRateMoneyDayNumber = value
				Me.SendPropertyChanged("PayRateMoneyDayNumber")
				Me.OnPayRateMoneyDayNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayPrincipalMoneyDayNumber", DbType:="Int NOT NULL")>  _
	Public Property PayPrincipalMoneyDayNumber() As Integer
		Get
			Return Me._PayPrincipalMoneyDayNumber
		End Get
		Set
			If ((Me._PayPrincipalMoneyDayNumber = value)  _
						= false) Then
				Me.OnPayPrincipalMoneyDayNumberChanging(value)
				Me.SendPropertyChanging
				Me._PayPrincipalMoneyDayNumber = value
				Me.SendPropertyChanged("PayPrincipalMoneyDayNumber")
				Me.OnPayPrincipalMoneyDayNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo1", DbType:="Char(100)")>  _
	Public Property Memo1() As String
		Get
			Return Me._Memo1
		End Get
		Set
			If (String.Equals(Me._Memo1, value) = false) Then
				Me.OnMemo1Changing(value)
				Me.SendPropertyChanging
				Me._Memo1 = value
				Me.SendPropertyChanged("Memo1")
				Me.OnMemo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayRateMoney", DbType:="Money NOT NULL")>  _
	Public Property PayRateMoney() As Decimal
		Get
			Return Me._PayRateMoney
		End Get
		Set
			If ((Me._PayRateMoney = value)  _
						= false) Then
				Me.OnPayRateMoneyChanging(value)
				Me.SendPropertyChanging
				Me._PayRateMoney = value
				Me.SendPropertyChanged("PayRateMoney")
				Me.OnPayRateMoneyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Borrow_BorrowPayMoney", Storage:="_BorrowPayMoney", ThisKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,ID", OtherKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,FK_BorrowID")>  _
	Public Property BorrowPayMoney() As EntitySet(Of BorrowPayMoney)
		Get
			Return Me._BorrowPayMoney
		End Get
		Set
			Me._BorrowPayMoney.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Borrow_BorrowLCBill", Storage:="_BorrowLCBill", ThisKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,ID", OtherKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,FK_BorrowID")>  _
	Public Property BorrowLCBill() As EntitySet(Of BorrowLCBill)
		Get
			Return Me._BorrowLCBill
		End Get
		Set
			Me._BorrowLCBill.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BorrowContract_Borrow", Storage:="_BorrowContract", ThisKey:="FK_BankNumber,FK_ContractKind,FK_StartDate", OtherKey:="BankNumber,ContractKind,StartDate", IsForeignKey:=true)>  _
	Public Property BorrowContract() As BorrowContract
		Get
			Return Me._BorrowContract.Entity
		End Get
		Set
			Dim previousValue As BorrowContract = Me._BorrowContract.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._BorrowContract.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._BorrowContract.Entity = Nothing
					previousValue.Borrow.Remove(Me)
				End If
				Me._BorrowContract.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.Borrow.Add(Me)
					Me._FK_BankNumber = value.BankNumber
					Me._FK_ContractKind = value.ContractKind
					Me._FK_StartDate = value.StartDate
				Else
					Me._FK_BankNumber = CType(Nothing, String)
					Me._FK_ContractKind = CType(Nothing, String)
					Me._FK_StartDate = CType(Nothing, Date)
				End If
				Me.SendPropertyChanged("BorrowContract")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_BorrowPayMoney(ByVal entity As BorrowPayMoney)
		Me.SendPropertyChanging
		entity.Borrow = Me
	End Sub
	
	Private Sub detach_BorrowPayMoney(ByVal entity As BorrowPayMoney)
		Me.SendPropertyChanging
		entity.Borrow = Nothing
	End Sub
	
	Private Sub attach_BorrowLCBill(ByVal entity As BorrowLCBill)
		Me.SendPropertyChanging
		entity.Borrow = Me
	End Sub
	
	Private Sub detach_BorrowLCBill(ByVal entity As BorrowLCBill)
		Me.SendPropertyChanging
		entity.Borrow = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BorrowPayMoney")>  _
Partial Public Class BorrowPayMoney
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FK_BankNumber As String
	
	Private _FK_ContractKind As String
	
	Private _FK_StartDate As Date
	
	Private _FK_BorrowID As Integer
	
	Private _ID As Integer
	
	Private _PayMoneyDate As Date
	
	Private _PayMoneyTool As Integer
	
	Private _PayBankNumber As String
	
	Private _PayToUser As String
	
	Private _PayUseMoney As Decimal
	
	Private _PayRateMoney As Decimal
	
	Private _PayRateMoneyCritdialDate As Date
	
	Private _Memo1 As String
	
	Private _Borrow As EntityRef(Of Borrow)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFK_BankNumberChanging(value As String)
    End Sub
    Partial Private Sub OnFK_BankNumberChanged()
    End Sub
    Partial Private Sub OnFK_ContractKindChanging(value As String)
    End Sub
    Partial Private Sub OnFK_ContractKindChanged()
    End Sub
    Partial Private Sub OnFK_StartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnFK_StartDateChanged()
    End Sub
    Partial Private Sub OnFK_BorrowIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_BorrowIDChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnPayMoneyDateChanging(value As Date)
    End Sub
    Partial Private Sub OnPayMoneyDateChanged()
    End Sub
    Partial Private Sub OnPayMoneyToolChanging(value As Integer)
    End Sub
    Partial Private Sub OnPayMoneyToolChanged()
    End Sub
    Partial Private Sub OnPayBankNumberChanging(value As String)
    End Sub
    Partial Private Sub OnPayBankNumberChanged()
    End Sub
    Partial Private Sub OnPayToUserChanging(value As String)
    End Sub
    Partial Private Sub OnPayToUserChanged()
    End Sub
    Partial Private Sub OnPayUseMoneyChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPayUseMoneyChanged()
    End Sub
    Partial Private Sub OnPayRateMoneyChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPayRateMoneyChanged()
    End Sub
    Partial Private Sub OnPayRateMoneyCritdialDateChanging(value As Date)
    End Sub
    Partial Private Sub OnPayRateMoneyCritdialDateChanged()
    End Sub
    Partial Private Sub OnMemo1Changing(value As String)
    End Sub
    Partial Private Sub OnMemo1Changed()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Borrow = CType(Nothing, EntityRef(Of Borrow))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BankNumber", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_BankNumber() As String
		Get
			Return Me._FK_BankNumber
		End Get
		Set
			If (String.Equals(Me._FK_BankNumber, value) = false) Then
				If Me._Borrow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_BankNumberChanging(value)
				Me.SendPropertyChanging
				Me._FK_BankNumber = value
				Me.SendPropertyChanged("FK_BankNumber")
				Me.OnFK_BankNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_ContractKind", DbType:="Char(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_ContractKind() As String
		Get
			Return Me._FK_ContractKind
		End Get
		Set
			If (String.Equals(Me._FK_ContractKind, value) = false) Then
				If Me._Borrow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_ContractKindChanging(value)
				Me.SendPropertyChanging
				Me._FK_ContractKind = value
				Me.SendPropertyChanged("FK_ContractKind")
				Me.OnFK_ContractKindChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_StartDate", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FK_StartDate() As Date
		Get
			Return Me._FK_StartDate
		End Get
		Set
			If ((Me._FK_StartDate = value)  _
						= false) Then
				If Me._Borrow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_StartDateChanging(value)
				Me.SendPropertyChanging
				Me._FK_StartDate = value
				Me.SendPropertyChanged("FK_StartDate")
				Me.OnFK_StartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BorrowID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FK_BorrowID() As Integer
		Get
			Return Me._FK_BorrowID
		End Get
		Set
			If ((Me._FK_BorrowID = value)  _
						= false) Then
				If Me._Borrow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_BorrowIDChanging(value)
				Me.SendPropertyChanging
				Me._FK_BorrowID = value
				Me.SendPropertyChanged("FK_BorrowID")
				Me.OnFK_BorrowIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayMoneyDate", DbType:="DateTime NOT NULL")>  _
	Public Property PayMoneyDate() As Date
		Get
			Return Me._PayMoneyDate
		End Get
		Set
			If ((Me._PayMoneyDate = value)  _
						= false) Then
				Me.OnPayMoneyDateChanging(value)
				Me.SendPropertyChanging
				Me._PayMoneyDate = value
				Me.SendPropertyChanged("PayMoneyDate")
				Me.OnPayMoneyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayMoneyTool", DbType:="Int NOT NULL")>  _
	Public Property PayMoneyTool() As Integer
		Get
			Return Me._PayMoneyTool
		End Get
		Set
			If ((Me._PayMoneyTool = value)  _
						= false) Then
				Me.OnPayMoneyToolChanging(value)
				Me.SendPropertyChanging
				Me._PayMoneyTool = value
				Me.SendPropertyChanged("PayMoneyTool")
				Me.OnPayMoneyToolChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayBankNumber", DbType:="Char(10)")>  _
	Public Property PayBankNumber() As String
		Get
			Return Me._PayBankNumber
		End Get
		Set
			If (String.Equals(Me._PayBankNumber, value) = false) Then
				Me.OnPayBankNumberChanging(value)
				Me.SendPropertyChanging
				Me._PayBankNumber = value
				Me.SendPropertyChanged("PayBankNumber")
				Me.OnPayBankNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayToUser", DbType:="Char(30)")>  _
	Public Property PayToUser() As String
		Get
			Return Me._PayToUser
		End Get
		Set
			If (String.Equals(Me._PayToUser, value) = false) Then
				Me.OnPayToUserChanging(value)
				Me.SendPropertyChanging
				Me._PayToUser = value
				Me.SendPropertyChanged("PayToUser")
				Me.OnPayToUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayUseMoney", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property PayUseMoney() As Decimal
		Get
			Return Me._PayUseMoney
		End Get
		Set
			If ((Me._PayUseMoney = value)  _
						= false) Then
				Me.OnPayUseMoneyChanging(value)
				Me.SendPropertyChanging
				Me._PayUseMoney = value
				Me.SendPropertyChanged("PayUseMoney")
				Me.OnPayUseMoneyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayRateMoney", DbType:="Decimal(18,0) NOT NULL")>  _
	Public Property PayRateMoney() As Decimal
		Get
			Return Me._PayRateMoney
		End Get
		Set
			If ((Me._PayRateMoney = value)  _
						= false) Then
				Me.OnPayRateMoneyChanging(value)
				Me.SendPropertyChanging
				Me._PayRateMoney = value
				Me.SendPropertyChanged("PayRateMoney")
				Me.OnPayRateMoneyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayRateMoneyCritdialDate", DbType:="DateTime NOT NULL")>  _
	Public Property PayRateMoneyCritdialDate() As Date
		Get
			Return Me._PayRateMoneyCritdialDate
		End Get
		Set
			If ((Me._PayRateMoneyCritdialDate = value)  _
						= false) Then
				Me.OnPayRateMoneyCritdialDateChanging(value)
				Me.SendPropertyChanging
				Me._PayRateMoneyCritdialDate = value
				Me.SendPropertyChanged("PayRateMoneyCritdialDate")
				Me.OnPayRateMoneyCritdialDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo1", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Memo1() As String
		Get
			Return Me._Memo1
		End Get
		Set
			If (String.Equals(Me._Memo1, value) = false) Then
				Me.OnMemo1Changing(value)
				Me.SendPropertyChanging
				Me._Memo1 = value
				Me.SendPropertyChanged("Memo1")
				Me.OnMemo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Borrow_BorrowPayMoney", Storage:="_Borrow", ThisKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,FK_BorrowID", OtherKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,ID", IsForeignKey:=true)>  _
	Public Property Borrow() As Borrow
		Get
			Return Me._Borrow.Entity
		End Get
		Set
			Dim previousValue As Borrow = Me._Borrow.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Borrow.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Borrow.Entity = Nothing
					previousValue.BorrowPayMoney.Remove(Me)
				End If
				Me._Borrow.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.BorrowPayMoney.Add(Me)
					Me._FK_BankNumber = value.FK_BankNumber
					Me._FK_ContractKind = value.FK_ContractKind
					Me._FK_StartDate = value.FK_StartDate
					Me._FK_BorrowID = value.ID
				Else
					Me._FK_BankNumber = CType(Nothing, String)
					Me._FK_ContractKind = CType(Nothing, String)
					Me._FK_StartDate = CType(Nothing, Date)
					Me._FK_BorrowID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Borrow")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BorrowContract")>  _
Partial Public Class BorrowContract
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BankNumber As String
	
	Private _ContractKind As String
	
	Private _StartDate As Date
	
	Private _EndDate As Date
	
	Private _CreditMoney As Decimal
	
	Private _CreditMoneyKind As String
	
	Private _ProcessEmployee As String
	
	Private _LatePayMonths As Integer
	
	Private _RepaymentMonths As Integer
	
	Private _RePaymentTimes As Integer
	
	Private _PayRateKind As System.Nullable(Of Integer)
	
	Private _PayRateMoneyDayNumber As System.Nullable(Of Integer)
	
	Private _Memo1 As String
	
	Private _RePaymentBankNumber As String
	
	Private _IsHaveParentBorrowContract As System.Nullable(Of Boolean)
	
	Private _FK_CompostBankNumber As String
	
	Private _FK_CompostContractKind As String
	
	Private _FK_CompostStartDate As System.Nullable(Of Date)
	
	Private _Borrow As EntitySet(Of Borrow)
	
	Private _BorrowContract1 As EntitySet(Of BorrowContract)
	
	Private _BorrowContractRate As EntitySet(Of BorrowContractRate)
	
	Private _BorrowContract As EntityRef(Of BorrowContract)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBankNumberChanging(value As String)
    End Sub
    Partial Private Sub OnBankNumberChanged()
    End Sub
    Partial Private Sub OnContractKindChanging(value As String)
    End Sub
    Partial Private Sub OnContractKindChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnEndDateChanging(value As Date)
    End Sub
    Partial Private Sub OnEndDateChanged()
    End Sub
    Partial Private Sub OnCreditMoneyChanging(value As Decimal)
    End Sub
    Partial Private Sub OnCreditMoneyChanged()
    End Sub
    Partial Private Sub OnCreditMoneyKindChanging(value As String)
    End Sub
    Partial Private Sub OnCreditMoneyKindChanged()
    End Sub
    Partial Private Sub OnProcessEmployeeChanging(value As String)
    End Sub
    Partial Private Sub OnProcessEmployeeChanged()
    End Sub
    Partial Private Sub OnLatePayMonthsChanging(value As Integer)
    End Sub
    Partial Private Sub OnLatePayMonthsChanged()
    End Sub
    Partial Private Sub OnRepaymentMonthsChanging(value As Integer)
    End Sub
    Partial Private Sub OnRepaymentMonthsChanged()
    End Sub
    Partial Private Sub OnRePaymentTimesChanging(value As Integer)
    End Sub
    Partial Private Sub OnRePaymentTimesChanged()
    End Sub
    Partial Private Sub OnPayRateKindChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPayRateKindChanged()
    End Sub
    Partial Private Sub OnPayRateMoneyDayNumberChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnPayRateMoneyDayNumberChanged()
    End Sub
    Partial Private Sub OnMemo1Changing(value As String)
    End Sub
    Partial Private Sub OnMemo1Changed()
    End Sub
    Partial Private Sub OnRePaymentBankNumberChanging(value As String)
    End Sub
    Partial Private Sub OnRePaymentBankNumberChanged()
    End Sub
    Partial Private Sub OnIsHaveParentBorrowContractChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsHaveParentBorrowContractChanged()
    End Sub
    Partial Private Sub OnFK_CompostBankNumberChanging(value As String)
    End Sub
    Partial Private Sub OnFK_CompostBankNumberChanged()
    End Sub
    Partial Private Sub OnFK_CompostContractKindChanging(value As String)
    End Sub
    Partial Private Sub OnFK_CompostContractKindChanged()
    End Sub
    Partial Private Sub OnFK_CompostStartDateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnFK_CompostStartDateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._Borrow = New EntitySet(Of Borrow)(AddressOf Me.attach_Borrow, AddressOf Me.detach_Borrow)
		Me._BorrowContract1 = New EntitySet(Of BorrowContract)(AddressOf Me.attach_BorrowContract1, AddressOf Me.detach_BorrowContract1)
		Me._BorrowContractRate = New EntitySet(Of BorrowContractRate)(AddressOf Me.attach_BorrowContractRate, AddressOf Me.detach_BorrowContractRate)
		Me._BorrowContract = CType(Nothing, EntityRef(Of BorrowContract))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BankNumber", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property BankNumber() As String
		Get
			Return Me._BankNumber
		End Get
		Set
			If (String.Equals(Me._BankNumber, value) = false) Then
				Me.OnBankNumberChanging(value)
				Me.SendPropertyChanging
				Me._BankNumber = value
				Me.SendPropertyChanged("BankNumber")
				Me.OnBankNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContractKind", DbType:="Char(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ContractKind() As String
		Get
			Return Me._ContractKind
		End Get
		Set
			If (String.Equals(Me._ContractKind, value) = false) Then
				Me.OnContractKindChanging(value)
				Me.SendPropertyChanging
				Me._ContractKind = value
				Me.SendPropertyChanged("ContractKind")
				Me.OnContractKindChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property StartDate() As Date
		Get
			Return Me._StartDate
		End Get
		Set
			If ((Me._StartDate = value)  _
						= false) Then
				Me.OnStartDateChanging(value)
				Me.SendPropertyChanging
				Me._StartDate = value
				Me.SendPropertyChanged("StartDate")
				Me.OnStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDate", DbType:="DateTime NOT NULL")>  _
	Public Property EndDate() As Date
		Get
			Return Me._EndDate
		End Get
		Set
			If ((Me._EndDate = value)  _
						= false) Then
				Me.OnEndDateChanging(value)
				Me.SendPropertyChanging
				Me._EndDate = value
				Me.SendPropertyChanged("EndDate")
				Me.OnEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditMoney", DbType:="Money NOT NULL")>  _
	Public Property CreditMoney() As Decimal
		Get
			Return Me._CreditMoney
		End Get
		Set
			If ((Me._CreditMoney = value)  _
						= false) Then
				Me.OnCreditMoneyChanging(value)
				Me.SendPropertyChanging
				Me._CreditMoney = value
				Me.SendPropertyChanged("CreditMoney")
				Me.OnCreditMoneyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_CreditMoneyKind", DbType:="Char(4) NOT NULL", CanBeNull:=false)>  _
	Public Property CreditMoneyKind() As String
		Get
			Return Me._CreditMoneyKind
		End Get
		Set
			If (String.Equals(Me._CreditMoneyKind, value) = false) Then
				Me.OnCreditMoneyKindChanging(value)
				Me.SendPropertyChanging
				Me._CreditMoneyKind = value
				Me.SendPropertyChanged("CreditMoneyKind")
				Me.OnCreditMoneyKindChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ProcessEmployee", DbType:="Char(16)")>  _
	Public Property ProcessEmployee() As String
		Get
			Return Me._ProcessEmployee
		End Get
		Set
			If (String.Equals(Me._ProcessEmployee, value) = false) Then
				Me.OnProcessEmployeeChanging(value)
				Me.SendPropertyChanging
				Me._ProcessEmployee = value
				Me.SendPropertyChanged("ProcessEmployee")
				Me.OnProcessEmployeeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LatePayMonths", DbType:="Int NOT NULL")>  _
	Public Property LatePayMonths() As Integer
		Get
			Return Me._LatePayMonths
		End Get
		Set
			If ((Me._LatePayMonths = value)  _
						= false) Then
				Me.OnLatePayMonthsChanging(value)
				Me.SendPropertyChanging
				Me._LatePayMonths = value
				Me.SendPropertyChanged("LatePayMonths")
				Me.OnLatePayMonthsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RepaymentMonths", DbType:="Int NOT NULL")>  _
	Public Property RepaymentMonths() As Integer
		Get
			Return Me._RepaymentMonths
		End Get
		Set
			If ((Me._RepaymentMonths = value)  _
						= false) Then
				Me.OnRepaymentMonthsChanging(value)
				Me.SendPropertyChanging
				Me._RepaymentMonths = value
				Me.SendPropertyChanged("RepaymentMonths")
				Me.OnRepaymentMonthsChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RePaymentTimes", DbType:="Int NOT NULL")>  _
	Public Property RePaymentTimes() As Integer
		Get
			Return Me._RePaymentTimes
		End Get
		Set
			If ((Me._RePaymentTimes = value)  _
						= false) Then
				Me.OnRePaymentTimesChanging(value)
				Me.SendPropertyChanging
				Me._RePaymentTimes = value
				Me.SendPropertyChanged("RePaymentTimes")
				Me.OnRePaymentTimesChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayRateKind", DbType:="Int")>  _
	Public Property PayRateKind() As System.Nullable(Of Integer)
		Get
			Return Me._PayRateKind
		End Get
		Set
			If (Me._PayRateKind.Equals(value) = false) Then
				Me.OnPayRateKindChanging(value)
				Me.SendPropertyChanging
				Me._PayRateKind = value
				Me.SendPropertyChanged("PayRateKind")
				Me.OnPayRateKindChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayRateMoneyDayNumber", DbType:="Int")>  _
	Public Property PayRateMoneyDayNumber() As System.Nullable(Of Integer)
		Get
			Return Me._PayRateMoneyDayNumber
		End Get
		Set
			If (Me._PayRateMoneyDayNumber.Equals(value) = false) Then
				Me.OnPayRateMoneyDayNumberChanging(value)
				Me.SendPropertyChanging
				Me._PayRateMoneyDayNumber = value
				Me.SendPropertyChanged("PayRateMoneyDayNumber")
				Me.OnPayRateMoneyDayNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Memo1", DbType:="NText", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property Memo1() As String
		Get
			Return Me._Memo1
		End Get
		Set
			If (String.Equals(Me._Memo1, value) = false) Then
				Me.OnMemo1Changing(value)
				Me.SendPropertyChanging
				Me._Memo1 = value
				Me.SendPropertyChanged("Memo1")
				Me.OnMemo1Changed
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RePaymentBankNumber", DbType:="Char(10)")>  _
	Public Property RePaymentBankNumber() As String
		Get
			Return Me._RePaymentBankNumber
		End Get
		Set
			If (String.Equals(Me._RePaymentBankNumber, value) = false) Then
				Me.OnRePaymentBankNumberChanging(value)
				Me.SendPropertyChanging
				Me._RePaymentBankNumber = value
				Me.SendPropertyChanged("RePaymentBankNumber")
				Me.OnRePaymentBankNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsHaveParentBorrowContract", DbType:="Bit")>  _
	Public Property IsHaveParentBorrowContract() As System.Nullable(Of Boolean)
		Get
			Return Me._IsHaveParentBorrowContract
		End Get
		Set
			If (Me._IsHaveParentBorrowContract.Equals(value) = false) Then
				Me.OnIsHaveParentBorrowContractChanging(value)
				Me.SendPropertyChanging
				Me._IsHaveParentBorrowContract = value
				Me.SendPropertyChanged("IsHaveParentBorrowContract")
				Me.OnIsHaveParentBorrowContractChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_CompostBankNumber", DbType:="Char(10)")>  _
	Public Property FK_CompostBankNumber() As String
		Get
			Return Me._FK_CompostBankNumber
		End Get
		Set
			If (String.Equals(Me._FK_CompostBankNumber, value) = false) Then
				If Me._BorrowContract.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_CompostBankNumberChanging(value)
				Me.SendPropertyChanging
				Me._FK_CompostBankNumber = value
				Me.SendPropertyChanged("FK_CompostBankNumber")
				Me.OnFK_CompostBankNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_CompostContractKind", DbType:="Char(2)")>  _
	Public Property FK_CompostContractKind() As String
		Get
			Return Me._FK_CompostContractKind
		End Get
		Set
			If (String.Equals(Me._FK_CompostContractKind, value) = false) Then
				If Me._BorrowContract.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_CompostContractKindChanging(value)
				Me.SendPropertyChanging
				Me._FK_CompostContractKind = value
				Me.SendPropertyChanged("FK_CompostContractKind")
				Me.OnFK_CompostContractKindChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_CompostStartDate", DbType:="DateTime")>  _
	Public Property FK_CompostStartDate() As System.Nullable(Of Date)
		Get
			Return Me._FK_CompostStartDate
		End Get
		Set
			If (Me._FK_CompostStartDate.Equals(value) = false) Then
				If Me._BorrowContract.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_CompostStartDateChanging(value)
				Me.SendPropertyChanging
				Me._FK_CompostStartDate = value
				Me.SendPropertyChanged("FK_CompostStartDate")
				Me.OnFK_CompostStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BorrowContract_Borrow", Storage:="_Borrow", ThisKey:="BankNumber,ContractKind,StartDate", OtherKey:="FK_BankNumber,FK_ContractKind,FK_StartDate")>  _
	Public Property Borrow() As EntitySet(Of Borrow)
		Get
			Return Me._Borrow
		End Get
		Set
			Me._Borrow.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BorrowContract_BorrowContract", Storage:="_BorrowContract1", ThisKey:="BankNumber,ContractKind,StartDate", OtherKey:="FK_CompostBankNumber,FK_CompostContractKind,FK_CompostStartDate")>  _
	Public Property BorrowContract1() As EntitySet(Of BorrowContract)
		Get
			Return Me._BorrowContract1
		End Get
		Set
			Me._BorrowContract1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BorrowContract_BorrowContractRate", Storage:="_BorrowContractRate", ThisKey:="BankNumber,ContractKind,StartDate", OtherKey:="BankNumber,ContractKind,StartDate")>  _
	Public Property BorrowContractRate() As EntitySet(Of BorrowContractRate)
		Get
			Return Me._BorrowContractRate
		End Get
		Set
			Me._BorrowContractRate.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BorrowContract_BorrowContract", Storage:="_BorrowContract", ThisKey:="FK_CompostBankNumber,FK_CompostContractKind,FK_CompostStartDate", OtherKey:="BankNumber,ContractKind,StartDate", IsForeignKey:=true)>  _
	Public Property BorrowContract() As BorrowContract
		Get
			Return Me._BorrowContract.Entity
		End Get
		Set
			Dim previousValue As BorrowContract = Me._BorrowContract.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._BorrowContract.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._BorrowContract.Entity = Nothing
					previousValue.BorrowContract1.Remove(Me)
				End If
				Me._BorrowContract.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.BorrowContract1.Add(Me)
					Me._FK_CompostBankNumber = value.BankNumber
					Me._FK_CompostContractKind = value.ContractKind
					Me._FK_CompostStartDate = value.StartDate
				Else
					Me._FK_CompostBankNumber = CType(Nothing, String)
					Me._FK_CompostContractKind = CType(Nothing, String)
					Me._FK_CompostStartDate = CType(Nothing, Nullable(Of Date))
				End If
				Me.SendPropertyChanged("BorrowContract")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_Borrow(ByVal entity As Borrow)
		Me.SendPropertyChanging
		entity.BorrowContract = Me
	End Sub
	
	Private Sub detach_Borrow(ByVal entity As Borrow)
		Me.SendPropertyChanging
		entity.BorrowContract = Nothing
	End Sub
	
	Private Sub attach_BorrowContract1(ByVal entity As BorrowContract)
		Me.SendPropertyChanging
		entity.BorrowContract = Me
	End Sub
	
	Private Sub detach_BorrowContract1(ByVal entity As BorrowContract)
		Me.SendPropertyChanging
		entity.BorrowContract = Nothing
	End Sub
	
	Private Sub attach_BorrowContractRate(ByVal entity As BorrowContractRate)
		Me.SendPropertyChanging
		entity.BorrowContract = Me
	End Sub
	
	Private Sub detach_BorrowContractRate(ByVal entity As BorrowContractRate)
		Me.SendPropertyChanging
		entity.BorrowContract = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BorrowContractRate")>  _
Partial Public Class BorrowContractRate
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _BankNumber As String
	
	Private _ContractKind As String
	
	Private _StartDate As Date
	
	Private _RateStartDate As Date
	
	Private _RateEndDate As Date
	
	Private _Rate As Double
	
	Private _BorrowContract As EntityRef(Of BorrowContract)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnBankNumberChanging(value As String)
    End Sub
    Partial Private Sub OnBankNumberChanged()
    End Sub
    Partial Private Sub OnContractKindChanging(value As String)
    End Sub
    Partial Private Sub OnContractKindChanged()
    End Sub
    Partial Private Sub OnStartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnStartDateChanged()
    End Sub
    Partial Private Sub OnRateStartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnRateStartDateChanged()
    End Sub
    Partial Private Sub OnRateEndDateChanging(value As Date)
    End Sub
    Partial Private Sub OnRateEndDateChanged()
    End Sub
    Partial Private Sub OnRateChanging(value As Double)
    End Sub
    Partial Private Sub OnRateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._BorrowContract = CType(Nothing, EntityRef(Of BorrowContract))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BankNumber", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property BankNumber() As String
		Get
			Return Me._BankNumber
		End Get
		Set
			If (String.Equals(Me._BankNumber, value) = false) Then
				If Me._BorrowContract.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnBankNumberChanging(value)
				Me.SendPropertyChanging
				Me._BankNumber = value
				Me.SendPropertyChanged("BankNumber")
				Me.OnBankNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ContractKind", DbType:="Char(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ContractKind() As String
		Get
			Return Me._ContractKind
		End Get
		Set
			If (String.Equals(Me._ContractKind, value) = false) Then
				If Me._BorrowContract.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnContractKindChanging(value)
				Me.SendPropertyChanging
				Me._ContractKind = value
				Me.SendPropertyChanged("ContractKind")
				Me.OnContractKindChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDate", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property StartDate() As Date
		Get
			Return Me._StartDate
		End Get
		Set
			If ((Me._StartDate = value)  _
						= false) Then
				If Me._BorrowContract.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnStartDateChanging(value)
				Me.SendPropertyChanging
				Me._StartDate = value
				Me.SendPropertyChanged("StartDate")
				Me.OnStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RateStartDate", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property RateStartDate() As Date
		Get
			Return Me._RateStartDate
		End Get
		Set
			If ((Me._RateStartDate = value)  _
						= false) Then
				Me.OnRateStartDateChanging(value)
				Me.SendPropertyChanging
				Me._RateStartDate = value
				Me.SendPropertyChanged("RateStartDate")
				Me.OnRateStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RateEndDate", DbType:="DateTime NOT NULL")>  _
	Public Property RateEndDate() As Date
		Get
			Return Me._RateEndDate
		End Get
		Set
			If ((Me._RateEndDate = value)  _
						= false) Then
				Me.OnRateEndDateChanging(value)
				Me.SendPropertyChanging
				Me._RateEndDate = value
				Me.SendPropertyChanged("RateEndDate")
				Me.OnRateEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Rate", DbType:="Float NOT NULL")>  _
	Public Property Rate() As Double
		Get
			Return Me._Rate
		End Get
		Set
			If ((Me._Rate = value)  _
						= false) Then
				Me.OnRateChanging(value)
				Me.SendPropertyChanging
				Me._Rate = value
				Me.SendPropertyChanged("Rate")
				Me.OnRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BorrowContract_BorrowContractRate", Storage:="_BorrowContract", ThisKey:="BankNumber,ContractKind,StartDate", OtherKey:="BankNumber,ContractKind,StartDate", IsForeignKey:=true)>  _
	Public Property BorrowContract() As BorrowContract
		Get
			Return Me._BorrowContract.Entity
		End Get
		Set
			Dim previousValue As BorrowContract = Me._BorrowContract.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._BorrowContract.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._BorrowContract.Entity = Nothing
					previousValue.BorrowContractRate.Remove(Me)
				End If
				Me._BorrowContract.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.BorrowContractRate.Add(Me)
					Me._BankNumber = value.BankNumber
					Me._ContractKind = value.ContractKind
					Me._StartDate = value.StartDate
				Else
					Me._BankNumber = CType(Nothing, String)
					Me._ContractKind = CType(Nothing, String)
					Me._StartDate = CType(Nothing, Date)
				End If
				Me.SendPropertyChanged("BorrowContract")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BorrowLCBill")>  _
Partial Public Class BorrowLCBill
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FK_BankNumber As String
	
	Private _FK_ContractKind As String
	
	Private _FK_StartDate As Date
	
	Private _FK_BorrowID As Integer
	
	Private _ID As Integer
	
	Private _DebtRaiseDate As Date
	
	Private _IsReceiveBankNotify As Boolean
	
	Private _BillStartDate As Date
	
	Private _BillEndDate As Date
	
	Private _UseMoney As Decimal
	
	Private _BillRate As Double
	
	Private _ExchangeRage As Double
	
	Private _BorrowLCBillPayMoney As EntitySet(Of BorrowLCBillPayMoney)
	
	Private _Borrow As EntityRef(Of Borrow)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFK_BankNumberChanging(value As String)
    End Sub
    Partial Private Sub OnFK_BankNumberChanged()
    End Sub
    Partial Private Sub OnFK_ContractKindChanging(value As String)
    End Sub
    Partial Private Sub OnFK_ContractKindChanged()
    End Sub
    Partial Private Sub OnFK_StartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnFK_StartDateChanged()
    End Sub
    Partial Private Sub OnFK_BorrowIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_BorrowIDChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnDebtRaiseDateChanging(value As Date)
    End Sub
    Partial Private Sub OnDebtRaiseDateChanged()
    End Sub
    Partial Private Sub OnIsReceiveBankNotifyChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsReceiveBankNotifyChanged()
    End Sub
    Partial Private Sub OnBillStartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnBillStartDateChanged()
    End Sub
    Partial Private Sub OnBillEndDateChanging(value As Date)
    End Sub
    Partial Private Sub OnBillEndDateChanged()
    End Sub
    Partial Private Sub OnUseMoneyChanging(value As Decimal)
    End Sub
    Partial Private Sub OnUseMoneyChanged()
    End Sub
    Partial Private Sub OnBillRateChanging(value As Double)
    End Sub
    Partial Private Sub OnBillRateChanged()
    End Sub
    Partial Private Sub OnExchangeRageChanging(value As Double)
    End Sub
    Partial Private Sub OnExchangeRageChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._BorrowLCBillPayMoney = New EntitySet(Of BorrowLCBillPayMoney)(AddressOf Me.attach_BorrowLCBillPayMoney, AddressOf Me.detach_BorrowLCBillPayMoney)
		Me._Borrow = CType(Nothing, EntityRef(Of Borrow))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BankNumber", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_BankNumber() As String
		Get
			Return Me._FK_BankNumber
		End Get
		Set
			If (String.Equals(Me._FK_BankNumber, value) = false) Then
				If Me._Borrow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_BankNumberChanging(value)
				Me.SendPropertyChanging
				Me._FK_BankNumber = value
				Me.SendPropertyChanged("FK_BankNumber")
				Me.OnFK_BankNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_ContractKind", DbType:="Char(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_ContractKind() As String
		Get
			Return Me._FK_ContractKind
		End Get
		Set
			If (String.Equals(Me._FK_ContractKind, value) = false) Then
				If Me._Borrow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_ContractKindChanging(value)
				Me.SendPropertyChanging
				Me._FK_ContractKind = value
				Me.SendPropertyChanged("FK_ContractKind")
				Me.OnFK_ContractKindChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_StartDate", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FK_StartDate() As Date
		Get
			Return Me._FK_StartDate
		End Get
		Set
			If ((Me._FK_StartDate = value)  _
						= false) Then
				If Me._Borrow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_StartDateChanging(value)
				Me.SendPropertyChanging
				Me._FK_StartDate = value
				Me.SendPropertyChanged("FK_StartDate")
				Me.OnFK_StartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BorrowID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FK_BorrowID() As Integer
		Get
			Return Me._FK_BorrowID
		End Get
		Set
			If ((Me._FK_BorrowID = value)  _
						= false) Then
				If Me._Borrow.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_BorrowIDChanging(value)
				Me.SendPropertyChanging
				Me._FK_BorrowID = value
				Me.SendPropertyChanged("FK_BorrowID")
				Me.OnFK_BorrowIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DebtRaiseDate", DbType:="DateTime NOT NULL")>  _
	Public Property DebtRaiseDate() As Date
		Get
			Return Me._DebtRaiseDate
		End Get
		Set
			If ((Me._DebtRaiseDate = value)  _
						= false) Then
				Me.OnDebtRaiseDateChanging(value)
				Me.SendPropertyChanging
				Me._DebtRaiseDate = value
				Me.SendPropertyChanged("DebtRaiseDate")
				Me.OnDebtRaiseDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsReceiveBankNotify", DbType:="Bit NOT NULL")>  _
	Public Property IsReceiveBankNotify() As Boolean
		Get
			Return Me._IsReceiveBankNotify
		End Get
		Set
			If ((Me._IsReceiveBankNotify = value)  _
						= false) Then
				Me.OnIsReceiveBankNotifyChanging(value)
				Me.SendPropertyChanging
				Me._IsReceiveBankNotify = value
				Me.SendPropertyChanged("IsReceiveBankNotify")
				Me.OnIsReceiveBankNotifyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillStartDate", DbType:="DateTime NOT NULL")>  _
	Public Property BillStartDate() As Date
		Get
			Return Me._BillStartDate
		End Get
		Set
			If ((Me._BillStartDate = value)  _
						= false) Then
				Me.OnBillStartDateChanging(value)
				Me.SendPropertyChanging
				Me._BillStartDate = value
				Me.SendPropertyChanged("BillStartDate")
				Me.OnBillStartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillEndDate", DbType:="DateTime NOT NULL")>  _
	Public Property BillEndDate() As Date
		Get
			Return Me._BillEndDate
		End Get
		Set
			If ((Me._BillEndDate = value)  _
						= false) Then
				Me.OnBillEndDateChanging(value)
				Me.SendPropertyChanging
				Me._BillEndDate = value
				Me.SendPropertyChanged("BillEndDate")
				Me.OnBillEndDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UseMoney", DbType:="Money NOT NULL")>  _
	Public Property UseMoney() As Decimal
		Get
			Return Me._UseMoney
		End Get
		Set
			If ((Me._UseMoney = value)  _
						= false) Then
				Me.OnUseMoneyChanging(value)
				Me.SendPropertyChanging
				Me._UseMoney = value
				Me.SendPropertyChanged("UseMoney")
				Me.OnUseMoneyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_BillRate", DbType:="Float NOT NULL")>  _
	Public Property BillRate() As Double
		Get
			Return Me._BillRate
		End Get
		Set
			If ((Me._BillRate = value)  _
						= false) Then
				Me.OnBillRateChanging(value)
				Me.SendPropertyChanging
				Me._BillRate = value
				Me.SendPropertyChanged("BillRate")
				Me.OnBillRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExchangeRage", DbType:="Float NOT NULL")>  _
	Public Property ExchangeRage() As Double
		Get
			Return Me._ExchangeRage
		End Get
		Set
			If ((Me._ExchangeRage = value)  _
						= false) Then
				Me.OnExchangeRageChanging(value)
				Me.SendPropertyChanging
				Me._ExchangeRage = value
				Me.SendPropertyChanged("ExchangeRage")
				Me.OnExchangeRageChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BorrowLCBill_BorrowLCBillPayMoney", Storage:="_BorrowLCBillPayMoney", ThisKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,FK_BorrowID,ID", OtherKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,FK_BorrowID,FK_BorrowLCBillID")>  _
	Public Property BorrowLCBillPayMoney() As EntitySet(Of BorrowLCBillPayMoney)
		Get
			Return Me._BorrowLCBillPayMoney
		End Get
		Set
			Me._BorrowLCBillPayMoney.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="Borrow_BorrowLCBill", Storage:="_Borrow", ThisKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,FK_BorrowID", OtherKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,ID", IsForeignKey:=true)>  _
	Public Property Borrow() As Borrow
		Get
			Return Me._Borrow.Entity
		End Get
		Set
			Dim previousValue As Borrow = Me._Borrow.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._Borrow.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._Borrow.Entity = Nothing
					previousValue.BorrowLCBill.Remove(Me)
				End If
				Me._Borrow.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.BorrowLCBill.Add(Me)
					Me._FK_BankNumber = value.FK_BankNumber
					Me._FK_ContractKind = value.FK_ContractKind
					Me._FK_StartDate = value.FK_StartDate
					Me._FK_BorrowID = value.ID
				Else
					Me._FK_BankNumber = CType(Nothing, String)
					Me._FK_ContractKind = CType(Nothing, String)
					Me._FK_StartDate = CType(Nothing, Date)
					Me._FK_BorrowID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("Borrow")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_BorrowLCBillPayMoney(ByVal entity As BorrowLCBillPayMoney)
		Me.SendPropertyChanging
		entity.BorrowLCBill = Me
	End Sub
	
	Private Sub detach_BorrowLCBillPayMoney(ByVal entity As BorrowLCBillPayMoney)
		Me.SendPropertyChanging
		entity.BorrowLCBill = Nothing
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.BorrowLCBillPayMoney")>  _
Partial Public Class BorrowLCBillPayMoney
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _FK_BankNumber As String
	
	Private _FK_ContractKind As String
	
	Private _FK_StartDate As Date
	
	Private _FK_BorrowID As Integer
	
	Private _FK_BorrowLCBillID As Integer
	
	Private _ID As Integer
	
	Private _PayMoneyDate As Date
	
	Private _PayUseMoney As Decimal
	
	Private _PayRateMoney As Decimal
	
	Private _PayRateMoneyCritdialDate As Date
	
	Private _ExchangeRate As Double
	
	Private _IsNoPayMoneyAndUse As Boolean
	
	Private _BorrowLCBill As EntityRef(Of BorrowLCBill)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnFK_BankNumberChanging(value As String)
    End Sub
    Partial Private Sub OnFK_BankNumberChanged()
    End Sub
    Partial Private Sub OnFK_ContractKindChanging(value As String)
    End Sub
    Partial Private Sub OnFK_ContractKindChanged()
    End Sub
    Partial Private Sub OnFK_StartDateChanging(value As Date)
    End Sub
    Partial Private Sub OnFK_StartDateChanged()
    End Sub
    Partial Private Sub OnFK_BorrowIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_BorrowIDChanged()
    End Sub
    Partial Private Sub OnFK_BorrowLCBillIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnFK_BorrowLCBillIDChanged()
    End Sub
    Partial Private Sub OnIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnPayMoneyDateChanging(value As Date)
    End Sub
    Partial Private Sub OnPayMoneyDateChanged()
    End Sub
    Partial Private Sub OnPayUseMoneyChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPayUseMoneyChanged()
    End Sub
    Partial Private Sub OnPayRateMoneyChanging(value As Decimal)
    End Sub
    Partial Private Sub OnPayRateMoneyChanged()
    End Sub
    Partial Private Sub OnPayRateMoneyCritdialDateChanging(value As Date)
    End Sub
    Partial Private Sub OnPayRateMoneyCritdialDateChanged()
    End Sub
    Partial Private Sub OnExchangeRateChanging(value As Double)
    End Sub
    Partial Private Sub OnExchangeRateChanged()
    End Sub
    Partial Private Sub OnIsNoPayMoneyAndUseChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsNoPayMoneyAndUseChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._BorrowLCBill = CType(Nothing, EntityRef(Of BorrowLCBill))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BankNumber", DbType:="Char(10) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_BankNumber() As String
		Get
			Return Me._FK_BankNumber
		End Get
		Set
			If (String.Equals(Me._FK_BankNumber, value) = false) Then
				If Me._BorrowLCBill.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_BankNumberChanging(value)
				Me.SendPropertyChanging
				Me._FK_BankNumber = value
				Me.SendPropertyChanged("FK_BankNumber")
				Me.OnFK_BankNumberChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_ContractKind", DbType:="Char(2) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property FK_ContractKind() As String
		Get
			Return Me._FK_ContractKind
		End Get
		Set
			If (String.Equals(Me._FK_ContractKind, value) = false) Then
				If Me._BorrowLCBill.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_ContractKindChanging(value)
				Me.SendPropertyChanging
				Me._FK_ContractKind = value
				Me.SendPropertyChanged("FK_ContractKind")
				Me.OnFK_ContractKindChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_StartDate", DbType:="DateTime NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FK_StartDate() As Date
		Get
			Return Me._FK_StartDate
		End Get
		Set
			If ((Me._FK_StartDate = value)  _
						= false) Then
				If Me._BorrowLCBill.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_StartDateChanging(value)
				Me.SendPropertyChanging
				Me._FK_StartDate = value
				Me.SendPropertyChanged("FK_StartDate")
				Me.OnFK_StartDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BorrowID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FK_BorrowID() As Integer
		Get
			Return Me._FK_BorrowID
		End Get
		Set
			If ((Me._FK_BorrowID = value)  _
						= false) Then
				If Me._BorrowLCBill.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_BorrowIDChanging(value)
				Me.SendPropertyChanging
				Me._FK_BorrowID = value
				Me.SendPropertyChanged("FK_BorrowID")
				Me.OnFK_BorrowIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_BorrowLCBillID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property FK_BorrowLCBillID() As Integer
		Get
			Return Me._FK_BorrowLCBillID
		End Get
		Set
			If ((Me._FK_BorrowLCBillID = value)  _
						= false) Then
				If Me._BorrowLCBill.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_BorrowLCBillIDChanging(value)
				Me.SendPropertyChanging
				Me._FK_BorrowLCBillID = value
				Me.SendPropertyChanged("FK_BorrowLCBillID")
				Me.OnFK_BorrowLCBillIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Int NOT NULL", IsPrimaryKey:=true)>  _
	Public Property ID() As Integer
		Get
			Return Me._ID
		End Get
		Set
			If ((Me._ID = value)  _
						= false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayMoneyDate", DbType:="DateTime NOT NULL")>  _
	Public Property PayMoneyDate() As Date
		Get
			Return Me._PayMoneyDate
		End Get
		Set
			If ((Me._PayMoneyDate = value)  _
						= false) Then
				Me.OnPayMoneyDateChanging(value)
				Me.SendPropertyChanging
				Me._PayMoneyDate = value
				Me.SendPropertyChanged("PayMoneyDate")
				Me.OnPayMoneyDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayUseMoney", DbType:="Money NOT NULL")>  _
	Public Property PayUseMoney() As Decimal
		Get
			Return Me._PayUseMoney
		End Get
		Set
			If ((Me._PayUseMoney = value)  _
						= false) Then
				Me.OnPayUseMoneyChanging(value)
				Me.SendPropertyChanging
				Me._PayUseMoney = value
				Me.SendPropertyChanged("PayUseMoney")
				Me.OnPayUseMoneyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayRateMoney", DbType:="Money NOT NULL")>  _
	Public Property PayRateMoney() As Decimal
		Get
			Return Me._PayRateMoney
		End Get
		Set
			If ((Me._PayRateMoney = value)  _
						= false) Then
				Me.OnPayRateMoneyChanging(value)
				Me.SendPropertyChanging
				Me._PayRateMoney = value
				Me.SendPropertyChanged("PayRateMoney")
				Me.OnPayRateMoneyChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PayRateMoneyCritdialDate", DbType:="DateTime NOT NULL")>  _
	Public Property PayRateMoneyCritdialDate() As Date
		Get
			Return Me._PayRateMoneyCritdialDate
		End Get
		Set
			If ((Me._PayRateMoneyCritdialDate = value)  _
						= false) Then
				Me.OnPayRateMoneyCritdialDateChanging(value)
				Me.SendPropertyChanging
				Me._PayRateMoneyCritdialDate = value
				Me.SendPropertyChanged("PayRateMoneyCritdialDate")
				Me.OnPayRateMoneyCritdialDateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ExchangeRate", DbType:="Float NOT NULL")>  _
	Public Property ExchangeRate() As Double
		Get
			Return Me._ExchangeRate
		End Get
		Set
			If ((Me._ExchangeRate = value)  _
						= false) Then
				Me.OnExchangeRateChanging(value)
				Me.SendPropertyChanging
				Me._ExchangeRate = value
				Me.SendPropertyChanged("ExchangeRate")
				Me.OnExchangeRateChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsNoPayMoneyAndUse", DbType:="Bit NOT NULL")>  _
	Public Property IsNoPayMoneyAndUse() As Boolean
		Get
			Return Me._IsNoPayMoneyAndUse
		End Get
		Set
			If ((Me._IsNoPayMoneyAndUse = value)  _
						= false) Then
				Me.OnIsNoPayMoneyAndUseChanging(value)
				Me.SendPropertyChanging
				Me._IsNoPayMoneyAndUse = value
				Me.SendPropertyChanged("IsNoPayMoneyAndUse")
				Me.OnIsNoPayMoneyAndUseChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="BorrowLCBill_BorrowLCBillPayMoney", Storage:="_BorrowLCBill", ThisKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,FK_BorrowID,FK_BorrowLCBillID", OtherKey:="FK_BankNumber,FK_ContractKind,FK_StartDate,FK_BorrowID,ID", IsForeignKey:=true)>  _
	Public Property BorrowLCBill() As BorrowLCBill
		Get
			Return Me._BorrowLCBill.Entity
		End Get
		Set
			Dim previousValue As BorrowLCBill = Me._BorrowLCBill.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._BorrowLCBill.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._BorrowLCBill.Entity = Nothing
					previousValue.BorrowLCBillPayMoney.Remove(Me)
				End If
				Me._BorrowLCBill.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.BorrowLCBillPayMoney.Add(Me)
					Me._FK_BankNumber = value.FK_BankNumber
					Me._FK_ContractKind = value.FK_ContractKind
					Me._FK_StartDate = value.FK_StartDate
					Me._FK_BorrowID = value.FK_BorrowID
					Me._FK_BorrowLCBillID = value.ID
				Else
					Me._FK_BankNumber = CType(Nothing, String)
					Me._FK_ContractKind = CType(Nothing, String)
					Me._FK_StartDate = CType(Nothing, Date)
					Me._FK_BorrowID = CType(Nothing, Integer)
					Me._FK_BorrowLCBillID = CType(Nothing, Integer)
				End If
				Me.SendPropertyChanged("BorrowLCBill")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class
