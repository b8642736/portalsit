'------------------------------------------------------------------------------
' <auto-generated>
'     這段程式碼是由工具產生的。
'     執行階段版本:4.0.30319.1
'
'     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
'     變更將會遺失。
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="OtherOperator")>  _
Partial Public Class OtherOperatorDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "擴充性方法定義"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub InsertAS400QueryRecord(instance As AS400QueryRecord)
    End Sub
  Partial Private Sub UpdateAS400QueryRecord(instance As AS400QueryRecord)
    End Sub
  Partial Private Sub DeleteAS400QueryRecord(instance As AS400QueryRecord)
    End Sub
  Partial Private Sub InsertMessageBoard(instance As MessageBoard)
    End Sub
  Partial Private Sub UpdateMessageBoard(instance As MessageBoard)
    End Sub
  Partial Private Sub DeleteMessageBoard(instance As MessageBoard)
    End Sub
  Partial Private Sub InsertFileSharedRecord(instance As FileSharedRecord)
    End Sub
  Partial Private Sub UpdateFileSharedRecord(instance As FileSharedRecord)
    End Sub
  Partial Private Sub DeleteFileSharedRecord(instance As FileSharedRecord)
    End Sub
  Partial Private Sub InsertWebMenuDisplayForAuthority(instance As WebMenuDisplayForAuthority)
    End Sub
  Partial Private Sub UpdateWebMenuDisplayForAuthority(instance As WebMenuDisplayForAuthority)
    End Sub
  Partial Private Sub DeleteWebMenuDisplayForAuthority(instance As WebMenuDisplayForAuthority)
    End Sub
  Partial Private Sub InsertWebMenu(instance As WebMenu)
    End Sub
  Partial Private Sub UpdateWebMenu(instance As WebMenu)
    End Sub
  Partial Private Sub DeleteWebMenu(instance As WebMenu)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.CompanyLINQDB.My.MySettings.Default.Server1_OtherOperator, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property AS400QueryRecord() As System.Data.Linq.Table(Of AS400QueryRecord)
		Get
			Return Me.GetTable(Of AS400QueryRecord)
		End Get
	End Property
	
	Public ReadOnly Property MessageBoard() As System.Data.Linq.Table(Of MessageBoard)
		Get
			Return Me.GetTable(Of MessageBoard)
		End Get
	End Property
	
	Public ReadOnly Property FileSharedRecord() As System.Data.Linq.Table(Of FileSharedRecord)
		Get
			Return Me.GetTable(Of FileSharedRecord)
		End Get
	End Property
	
	Public ReadOnly Property WebMenuDisplayForAuthority() As System.Data.Linq.Table(Of WebMenuDisplayForAuthority)
		Get
			Return Me.GetTable(Of WebMenuDisplayForAuthority)
		End Get
	End Property
	
	Public ReadOnly Property WebMenu() As System.Data.Linq.Table(Of WebMenu)
		Get
			Return Me.GetTable(Of WebMenu)
		End Get
	End Property
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.AS400QueryRecord")>  _
Partial Public Class AS400QueryRecord
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As String
	
	Private _QueryString As String
	
	Private _QueryType As System.Nullable(Of Integer)
	
	Private _ModifyRecordCount As System.Nullable(Of Decimal)
	
	Private _RunPCIP As String
	
	Private _RunUser As String
	
	Private _RunTime As System.Nullable(Of Date)
	
	Private _IsRunSuccess As System.Nullable(Of Boolean)
	
	Private _IsDeleted As System.Nullable(Of Boolean)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnQueryStringChanging(value As String)
    End Sub
    Partial Private Sub OnQueryStringChanged()
    End Sub
    Partial Private Sub OnQueryTypeChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnQueryTypeChanged()
    End Sub
    Partial Private Sub OnModifyRecordCountChanging(value As System.Nullable(Of Decimal))
    End Sub
    Partial Private Sub OnModifyRecordCountChanged()
    End Sub
    Partial Private Sub OnRunPCIPChanging(value As String)
    End Sub
    Partial Private Sub OnRunPCIPChanged()
    End Sub
    Partial Private Sub OnRunUserChanging(value As String)
    End Sub
    Partial Private Sub OnRunUserChanged()
    End Sub
    Partial Private Sub OnRunTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnRunTimeChanged()
    End Sub
    Partial Private Sub OnIsRunSuccessChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsRunSuccessChanged()
    End Sub
    Partial Private Sub OnIsDeletedChanging(value As System.Nullable(Of Boolean))
    End Sub
    Partial Private Sub OnIsDeletedChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Char(38) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QueryString", DbType:="Text", UpdateCheck:=UpdateCheck.Never)>  _
	Public Property QueryString() As String
		Get
			Return Me._QueryString
		End Get
		Set
			If (String.Equals(Me._QueryString, value) = false) Then
				Me.OnQueryStringChanging(value)
				Me.SendPropertyChanging
				Me._QueryString = value
				Me.SendPropertyChanged("QueryString")
				Me.OnQueryStringChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_QueryType", DbType:="Int")>  _
	Public Property QueryType() As System.Nullable(Of Integer)
		Get
			Return Me._QueryType
		End Get
		Set
			If (Me._QueryType.Equals(value) = false) Then
				Me.OnQueryTypeChanging(value)
				Me.SendPropertyChanging
				Me._QueryType = value
				Me.SendPropertyChanged("QueryType")
				Me.OnQueryTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ModifyRecordCount", DbType:="Decimal(18,0)")>  _
	Public Property ModifyRecordCount() As System.Nullable(Of Decimal)
		Get
			Return Me._ModifyRecordCount
		End Get
		Set
			If (Me._ModifyRecordCount.Equals(value) = false) Then
				Me.OnModifyRecordCountChanging(value)
				Me.SendPropertyChanging
				Me._ModifyRecordCount = value
				Me.SendPropertyChanged("ModifyRecordCount")
				Me.OnModifyRecordCountChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunPCIP", DbType:="Char(15)")>  _
	Public Property RunPCIP() As String
		Get
			Return Me._RunPCIP
		End Get
		Set
			If (String.Equals(Me._RunPCIP, value) = false) Then
				Me.OnRunPCIPChanging(value)
				Me.SendPropertyChanging
				Me._RunPCIP = value
				Me.SendPropertyChanged("RunPCIP")
				Me.OnRunPCIPChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunUser", DbType:="Char(10)")>  _
	Public Property RunUser() As String
		Get
			Return Me._RunUser
		End Get
		Set
			If (String.Equals(Me._RunUser, value) = false) Then
				Me.OnRunUserChanging(value)
				Me.SendPropertyChanging
				Me._RunUser = value
				Me.SendPropertyChanged("RunUser")
				Me.OnRunUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RunTime", DbType:="DateTime")>  _
	Public Property RunTime() As System.Nullable(Of Date)
		Get
			Return Me._RunTime
		End Get
		Set
			If (Me._RunTime.Equals(value) = false) Then
				Me.OnRunTimeChanging(value)
				Me.SendPropertyChanging
				Me._RunTime = value
				Me.SendPropertyChanged("RunTime")
				Me.OnRunTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsRunSuccess", DbType:="Bit")>  _
	Public Property IsRunSuccess() As System.Nullable(Of Boolean)
		Get
			Return Me._IsRunSuccess
		End Get
		Set
			If (Me._IsRunSuccess.Equals(value) = false) Then
				Me.OnIsRunSuccessChanging(value)
				Me.SendPropertyChanging
				Me._IsRunSuccess = value
				Me.SendPropertyChanged("IsRunSuccess")
				Me.OnIsRunSuccessChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsDeleted", DbType:="Bit")>  _
	Public Property IsDeleted() As System.Nullable(Of Boolean)
		Get
			Return Me._IsDeleted
		End Get
		Set
			If (Me._IsDeleted.Equals(value) = false) Then
				Me.OnIsDeletedChanging(value)
				Me.SendPropertyChanging
				Me._IsDeleted = value
				Me.SendPropertyChanged("IsDeleted")
				Me.OnIsDeletedChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.MessageBoard")>  _
Partial Public Class MessageBoard
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As String
	
	Private _MessageContent As String
	
	Private _DisplayOrder As Integer
	
	Private _StartDateTime As Date
	
	Private _EndDateTime As Date
	
	Private _DataSaveDateTeime As System.Nullable(Of Date)
	
	Private _DataSaveUser As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMessageContentChanging(value As String)
    End Sub
    Partial Private Sub OnMessageContentChanged()
    End Sub
    Partial Private Sub OnDisplayOrderChanging(value As Integer)
    End Sub
    Partial Private Sub OnDisplayOrderChanged()
    End Sub
    Partial Private Sub OnStartDateTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnStartDateTimeChanged()
    End Sub
    Partial Private Sub OnEndDateTimeChanging(value As Date)
    End Sub
    Partial Private Sub OnEndDateTimeChanged()
    End Sub
    Partial Private Sub OnDataSaveDateTeimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnDataSaveDateTeimeChanged()
    End Sub
    Partial Private Sub OnDataSaveUserChanging(value As String)
    End Sub
    Partial Private Sub OnDataSaveUserChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Char(38) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MessageContent", DbType:="Text NOT NULL", CanBeNull:=false, UpdateCheck:=UpdateCheck.Never)>  _
	Public Property MessageContent() As String
		Get
			Return Me._MessageContent
		End Get
		Set
			If (String.Equals(Me._MessageContent, value) = false) Then
				Me.OnMessageContentChanging(value)
				Me.SendPropertyChanging
				Me._MessageContent = value
				Me.SendPropertyChanged("MessageContent")
				Me.OnMessageContentChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayOrder", DbType:="Int NOT NULL")>  _
	Public Property DisplayOrder() As Integer
		Get
			Return Me._DisplayOrder
		End Get
		Set
			If ((Me._DisplayOrder = value)  _
						= false) Then
				Me.OnDisplayOrderChanging(value)
				Me.SendPropertyChanging
				Me._DisplayOrder = value
				Me.SendPropertyChanged("DisplayOrder")
				Me.OnDisplayOrderChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_StartDateTime", DbType:="DateTime NOT NULL")>  _
	Public Property StartDateTime() As Date
		Get
			Return Me._StartDateTime
		End Get
		Set
			If ((Me._StartDateTime = value)  _
						= false) Then
				Me.OnStartDateTimeChanging(value)
				Me.SendPropertyChanging
				Me._StartDateTime = value
				Me.SendPropertyChanged("StartDateTime")
				Me.OnStartDateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_EndDateTime", DbType:="DateTime NOT NULL")>  _
	Public Property EndDateTime() As Date
		Get
			Return Me._EndDateTime
		End Get
		Set
			If ((Me._EndDateTime = value)  _
						= false) Then
				Me.OnEndDateTimeChanging(value)
				Me.SendPropertyChanging
				Me._EndDateTime = value
				Me.SendPropertyChanged("EndDateTime")
				Me.OnEndDateTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSaveDateTeime", DbType:="DateTime")>  _
	Public Property DataSaveDateTeime() As System.Nullable(Of Date)
		Get
			Return Me._DataSaveDateTeime
		End Get
		Set
			If (Me._DataSaveDateTeime.Equals(value) = false) Then
				Me.OnDataSaveDateTeimeChanging(value)
				Me.SendPropertyChanging
				Me._DataSaveDateTeime = value
				Me.SendPropertyChanged("DataSaveDateTeime")
				Me.OnDataSaveDateTeimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DataSaveUser", DbType:="Char(20)")>  _
	Public Property DataSaveUser() As String
		Get
			Return Me._DataSaveUser
		End Get
		Set
			If (String.Equals(Me._DataSaveUser, value) = false) Then
				Me.OnDataSaveUserChanging(value)
				Me.SendPropertyChanging
				Me._DataSaveUser = value
				Me.SendPropertyChanged("DataSaveUser")
				Me.OnDataSaveUserChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.FileSharedRecord")>  _
Partial Public Class FileSharedRecord
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As String
	
	Private _FileName As String
	
	Private _SaveFileFullPath As String
	
	Private _Descript As String
	
	Private _UploadTime As System.Nullable(Of Date)
	
	Private _UploadUser As String
	
	Private _UploadPCIP As String
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnFileNameChanging(value As String)
    End Sub
    Partial Private Sub OnFileNameChanged()
    End Sub
    Partial Private Sub OnSaveFileFullPathChanging(value As String)
    End Sub
    Partial Private Sub OnSaveFileFullPathChanged()
    End Sub
    Partial Private Sub OnDescriptChanging(value As String)
    End Sub
    Partial Private Sub OnDescriptChanged()
    End Sub
    Partial Private Sub OnUploadTimeChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OnUploadTimeChanged()
    End Sub
    Partial Private Sub OnUploadUserChanging(value As String)
    End Sub
    Partial Private Sub OnUploadUserChanged()
    End Sub
    Partial Private Sub OnUploadPCIPChanging(value As String)
    End Sub
    Partial Private Sub OnUploadPCIPChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="Char(38) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FileName", DbType:="Char(100) NOT NULL", CanBeNull:=false)>  _
	Public Property FileName() As String
		Get
			Return Me._FileName
		End Get
		Set
			If (String.Equals(Me._FileName, value) = false) Then
				Me.OnFileNameChanging(value)
				Me.SendPropertyChanging
				Me._FileName = value
				Me.SendPropertyChanged("FileName")
				Me.OnFileNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_SaveFileFullPath", DbType:="Char(200) NOT NULL", CanBeNull:=false)>  _
	Public Property SaveFileFullPath() As String
		Get
			Return Me._SaveFileFullPath
		End Get
		Set
			If (String.Equals(Me._SaveFileFullPath, value) = false) Then
				Me.OnSaveFileFullPathChanging(value)
				Me.SendPropertyChanging
				Me._SaveFileFullPath = value
				Me.SendPropertyChanged("SaveFileFullPath")
				Me.OnSaveFileFullPathChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Descript", DbType:="Char(200)")>  _
	Public Property Descript() As String
		Get
			Return Me._Descript
		End Get
		Set
			If (String.Equals(Me._Descript, value) = false) Then
				Me.OnDescriptChanging(value)
				Me.SendPropertyChanging
				Me._Descript = value
				Me.SendPropertyChanged("Descript")
				Me.OnDescriptChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UploadTime", DbType:="DateTime")>  _
	Public Property UploadTime() As System.Nullable(Of Date)
		Get
			Return Me._UploadTime
		End Get
		Set
			If (Me._UploadTime.Equals(value) = false) Then
				Me.OnUploadTimeChanging(value)
				Me.SendPropertyChanging
				Me._UploadTime = value
				Me.SendPropertyChanged("UploadTime")
				Me.OnUploadTimeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UploadUser", DbType:="Char(20)")>  _
	Public Property UploadUser() As String
		Get
			Return Me._UploadUser
		End Get
		Set
			If (String.Equals(Me._UploadUser, value) = false) Then
				Me.OnUploadUserChanging(value)
				Me.SendPropertyChanging
				Me._UploadUser = value
				Me.SendPropertyChanged("UploadUser")
				Me.OnUploadUserChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UploadPCIP", DbType:="Char(15)")>  _
	Public Property UploadPCIP() As String
		Get
			Return Me._UploadPCIP
		End Get
		Set
			If (String.Equals(Me._UploadPCIP, value) = false) Then
				Me.OnUploadPCIPChanging(value)
				Me.SendPropertyChanging
				Me._UploadPCIP = value
				Me.SendPropertyChanged("UploadPCIP")
				Me.OnUploadPCIPChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebMenuDisplayForAuthority")>  _
Partial Public Class WebMenuDisplayForAuthority
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As String
	
	Private _FK_WebMenuID As String
	
	Private _FK_SystemCode As String
	
	Private _FK_FunctionCode As String
	
	Private _WebMenu As EntityRef(Of WebMenu)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnFK_WebMenuIDChanging(value As String)
    End Sub
    Partial Private Sub OnFK_WebMenuIDChanged()
    End Sub
    Partial Private Sub OnFK_SystemCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFK_SystemCodeChanged()
    End Sub
    Partial Private Sub OnFK_FunctionCodeChanging(value As String)
    End Sub
    Partial Private Sub OnFK_FunctionCodeChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebMenu = CType(Nothing, EntityRef(Of WebMenu))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="NChar(38) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_WebMenuID", DbType:="NChar(38) NOT NULL", CanBeNull:=false)>  _
	Public Property FK_WebMenuID() As String
		Get
			Return Me._FK_WebMenuID
		End Get
		Set
			If (String.Equals(Me._FK_WebMenuID, value) = false) Then
				If Me._WebMenu.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_WebMenuIDChanging(value)
				Me.SendPropertyChanging
				Me._FK_WebMenuID = value
				Me.SendPropertyChanged("FK_WebMenuID")
				Me.OnFK_WebMenuIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_SystemCode", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property FK_SystemCode() As String
		Get
			Return Me._FK_SystemCode
		End Get
		Set
			If (String.Equals(Me._FK_SystemCode, value) = false) Then
				Me.OnFK_SystemCodeChanging(value)
				Me.SendPropertyChanging
				Me._FK_SystemCode = value
				Me.SendPropertyChanged("FK_SystemCode")
				Me.OnFK_SystemCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_FunctionCode", DbType:="NChar(10) NOT NULL", CanBeNull:=false)>  _
	Public Property FK_FunctionCode() As String
		Get
			Return Me._FK_FunctionCode
		End Get
		Set
			If (String.Equals(Me._FK_FunctionCode, value) = false) Then
				Me.OnFK_FunctionCodeChanging(value)
				Me.SendPropertyChanging
				Me._FK_FunctionCode = value
				Me.SendPropertyChanged("FK_FunctionCode")
				Me.OnFK_FunctionCodeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebMenu_WebMenuDisplayForAuthority", Storage:="_WebMenu", ThisKey:="FK_WebMenuID", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property WebMenu() As WebMenu
		Get
			Return Me._WebMenu.Entity
		End Get
		Set
			Dim previousValue As WebMenu = Me._WebMenu.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebMenu.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebMenu.Entity = Nothing
					previousValue.WebMenuDisplayForAuthority.Remove(Me)
				End If
				Me._WebMenu.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebMenuDisplayForAuthority.Add(Me)
					Me._FK_WebMenuID = value.ID
				Else
					Me._FK_WebMenuID = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebMenu")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.WebMenu")>  _
Partial Public Class WebMenu
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _ID As String
	
	Private _MenuName As String
	
	Private _NodeType As Integer
	
	Private _NodeText As String
	
	Private _GoWebSitName As String
	
	Private _GoWebSitFileName As String
	
	Private _ToolTip As String
	
	Private _IsEnable As Boolean
	
	Private _FK_UpWebMenuID As String
	
	Private _WebMenuDisplayForAuthority As EntitySet(Of WebMenuDisplayForAuthority)
	
	Private _WebMenu1 As EntitySet(Of WebMenu)
	
	Private _WebMenu As EntityRef(Of WebMenu)
	
    #Region "擴充性方法定義"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnIDChanging(value As String)
    End Sub
    Partial Private Sub OnIDChanged()
    End Sub
    Partial Private Sub OnMenuNameChanging(value As String)
    End Sub
    Partial Private Sub OnMenuNameChanged()
    End Sub
    Partial Private Sub OnNodeTypeChanging(value As Integer)
    End Sub
    Partial Private Sub OnNodeTypeChanged()
    End Sub
    Partial Private Sub OnNodeTextChanging(value As String)
    End Sub
    Partial Private Sub OnNodeTextChanged()
    End Sub
    Partial Private Sub OnGoWebSitNameChanging(value As String)
    End Sub
    Partial Private Sub OnGoWebSitNameChanged()
    End Sub
    Partial Private Sub OnGoWebSitFileNameChanging(value As String)
    End Sub
    Partial Private Sub OnGoWebSitFileNameChanged()
    End Sub
    Partial Private Sub OnToolTipChanging(value As String)
    End Sub
    Partial Private Sub OnToolTipChanged()
    End Sub
    Partial Private Sub OnIsEnableChanging(value As Boolean)
    End Sub
    Partial Private Sub OnIsEnableChanged()
    End Sub
    Partial Private Sub OnFK_UpWebMenuIDChanging(value As String)
    End Sub
    Partial Private Sub OnFK_UpWebMenuIDChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		Me._WebMenuDisplayForAuthority = New EntitySet(Of WebMenuDisplayForAuthority)(AddressOf Me.attach_WebMenuDisplayForAuthority, AddressOf Me.detach_WebMenuDisplayForAuthority)
		Me._WebMenu1 = New EntitySet(Of WebMenu)(AddressOf Me.attach_WebMenu1, AddressOf Me.detach_WebMenu1)
		Me._WebMenu = CType(Nothing, EntityRef(Of WebMenu))
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ID", DbType:="NChar(38) NOT NULL", CanBeNull:=false, IsPrimaryKey:=true)>  _
	Public Property ID() As String
		Get
			Return Me._ID
		End Get
		Set
			If (String.Equals(Me._ID, value) = false) Then
				Me.OnIDChanging(value)
				Me.SendPropertyChanging
				Me._ID = value
				Me.SendPropertyChanged("ID")
				Me.OnIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_MenuName", DbType:="NChar(30) NOT NULL", CanBeNull:=false)>  _
	Public Property MenuName() As String
		Get
			Return Me._MenuName
		End Get
		Set
			If (String.Equals(Me._MenuName, value) = false) Then
				Me.OnMenuNameChanging(value)
				Me.SendPropertyChanging
				Me._MenuName = value
				Me.SendPropertyChanged("MenuName")
				Me.OnMenuNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NodeType", DbType:="Int NOT NULL")>  _
	Public Property NodeType() As Integer
		Get
			Return Me._NodeType
		End Get
		Set
			If ((Me._NodeType = value)  _
						= false) Then
				Me.OnNodeTypeChanging(value)
				Me.SendPropertyChanging
				Me._NodeType = value
				Me.SendPropertyChanged("NodeType")
				Me.OnNodeTypeChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_NodeText", DbType:="NChar(50)")>  _
	Public Property NodeText() As String
		Get
			Return Me._NodeText
		End Get
		Set
			If (String.Equals(Me._NodeText, value) = false) Then
				Me.OnNodeTextChanging(value)
				Me.SendPropertyChanging
				Me._NodeText = value
				Me.SendPropertyChanged("NodeText")
				Me.OnNodeTextChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GoWebSitName", DbType:="NChar(10)")>  _
	Public Property GoWebSitName() As String
		Get
			Return Me._GoWebSitName
		End Get
		Set
			If (String.Equals(Me._GoWebSitName, value) = false) Then
				Me.OnGoWebSitNameChanging(value)
				Me.SendPropertyChanging
				Me._GoWebSitName = value
				Me.SendPropertyChanged("GoWebSitName")
				Me.OnGoWebSitNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_GoWebSitFileName", DbType:="NChar(200)")>  _
	Public Property GoWebSitFileName() As String
		Get
			Return Me._GoWebSitFileName
		End Get
		Set
			If (String.Equals(Me._GoWebSitFileName, value) = false) Then
				Me.OnGoWebSitFileNameChanging(value)
				Me.SendPropertyChanging
				Me._GoWebSitFileName = value
				Me.SendPropertyChanged("GoWebSitFileName")
				Me.OnGoWebSitFileNameChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_ToolTip", DbType:="NChar(200)")>  _
	Public Property ToolTip() As String
		Get
			Return Me._ToolTip
		End Get
		Set
			If (String.Equals(Me._ToolTip, value) = false) Then
				Me.OnToolTipChanging(value)
				Me.SendPropertyChanging
				Me._ToolTip = value
				Me.SendPropertyChanged("ToolTip")
				Me.OnToolTipChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_IsEnable", DbType:="Bit NOT NULL")>  _
	Public Property IsEnable() As Boolean
		Get
			Return Me._IsEnable
		End Get
		Set
			If ((Me._IsEnable = value)  _
						= false) Then
				Me.OnIsEnableChanging(value)
				Me.SendPropertyChanging
				Me._IsEnable = value
				Me.SendPropertyChanged("IsEnable")
				Me.OnIsEnableChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FK_UpWebMenuID", DbType:="NChar(38)")>  _
	Public Property FK_UpWebMenuID() As String
		Get
			Return Me._FK_UpWebMenuID
		End Get
		Set
			If (String.Equals(Me._FK_UpWebMenuID, value) = false) Then
				If Me._WebMenu.HasLoadedOrAssignedValue Then
					Throw New System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException()
				End If
				Me.OnFK_UpWebMenuIDChanging(value)
				Me.SendPropertyChanging
				Me._FK_UpWebMenuID = value
				Me.SendPropertyChanged("FK_UpWebMenuID")
				Me.OnFK_UpWebMenuIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebMenu_WebMenuDisplayForAuthority", Storage:="_WebMenuDisplayForAuthority", ThisKey:="ID", OtherKey:="FK_WebMenuID")>  _
	Public Property WebMenuDisplayForAuthority() As EntitySet(Of WebMenuDisplayForAuthority)
		Get
			Return Me._WebMenuDisplayForAuthority
		End Get
		Set
			Me._WebMenuDisplayForAuthority.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebMenu_WebMenu", Storage:="_WebMenu1", ThisKey:="ID", OtherKey:="FK_UpWebMenuID")>  _
	Public Property WebMenu1() As EntitySet(Of WebMenu)
		Get
			Return Me._WebMenu1
		End Get
		Set
			Me._WebMenu1.Assign(value)
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.AssociationAttribute(Name:="WebMenu_WebMenu", Storage:="_WebMenu", ThisKey:="FK_UpWebMenuID", OtherKey:="ID", IsForeignKey:=true)>  _
	Public Property WebMenu() As WebMenu
		Get
			Return Me._WebMenu.Entity
		End Get
		Set
			Dim previousValue As WebMenu = Me._WebMenu.Entity
			If ((Object.Equals(previousValue, value) = false)  _
						OrElse (Me._WebMenu.HasLoadedOrAssignedValue = false)) Then
				Me.SendPropertyChanging
				If ((previousValue Is Nothing)  _
							= false) Then
					Me._WebMenu.Entity = Nothing
					previousValue.WebMenu1.Remove(Me)
				End If
				Me._WebMenu.Entity = value
				If ((value Is Nothing)  _
							= false) Then
					value.WebMenu1.Add(Me)
					Me._FK_UpWebMenuID = value.ID
				Else
					Me._FK_UpWebMenuID = CType(Nothing, String)
				End If
				Me.SendPropertyChanged("WebMenu")
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
	
	Private Sub attach_WebMenuDisplayForAuthority(ByVal entity As WebMenuDisplayForAuthority)
		Me.SendPropertyChanging
		entity.WebMenu = Me
	End Sub
	
	Private Sub detach_WebMenuDisplayForAuthority(ByVal entity As WebMenuDisplayForAuthority)
		Me.SendPropertyChanging
		entity.WebMenu = Nothing
	End Sub
	
	Private Sub attach_WebMenu1(ByVal entity As WebMenu)
		Me.SendPropertyChanging
		entity.WebMenu = Me
	End Sub
	
	Private Sub detach_WebMenu1(ByVal entity As WebMenu)
		Me.SendPropertyChanging
		entity.WebMenu = Nothing
	End Sub
End Class
